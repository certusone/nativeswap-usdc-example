{"version":3,"sources":["ethers-contracts/factories/CrossChainSwapV2__factory.ts","ethers-contracts/factories/CrossChainSwapV3__factory.ts","ethers-contracts/factories/IERC20__factory.ts","ethers-contracts/factories/IERC20Permit__factory.ts","ethers-contracts/factories/ISwapRouter__factory.ts","ethers-contracts/factories/IUSDCIntegration__factory.ts","ethers-contracts/factories/IUniswapRouter__factory.ts","ethers-contracts/factories/IUniswapV2Router01__factory.ts","ethers-contracts/factories/IUniswapV2Router02__factory.ts","ethers-contracts/factories/IUniswapV3SwapCallback__factory.ts","ethers-contracts/factories/IWETH__factory.ts","ethers-contracts/factories/IWormhole__factory.ts","ethers-contracts/factories/Migrations__factory.ts","ethers-contracts/factories/SwapHelper__factory.ts","route/generic.ts","route/evm.ts","route/uniswap-core.ts","route/uniswap-v3.ts","route/uniswap-v2.ts","route/hurricaneswap.ts","route/cross-quote.ts","utils/math.ts","swapper/helpers.ts","utils/consts.ts","swapper/swapper.ts","addresses/goerli.ts","addresses/fuji.ts","components/ButtonWithLoader.tsx","contexts/EthereumProviderContext.tsx","components/ToggleConnectedButton.tsx","components/EthereumSignerKey.tsx","icons/eth.svg","icons/avax.svg","components/TokenSelect.tsx","muiTheme.js","utils/parseError.ts","components/Settings.tsx","components/CircleLoader.tsx","components/SwapProgress.tsx","icons/Discord.svg","icons/Docs.svg","icons/Github.svg","icons/Medium.svg","icons/Telegram.svg","icons/Twitter.svg","icons/wormhole_logo.svg","components/Footer.tsx","contexts/TerraWalletContext.tsx","components/TerraWalletKey.tsx","hooks/useIsWalletReady.ts","views/Home.tsx","App.tsx","components/ErrorBoundary.js","index.js"],"names":["_abi","inputs","internalType","name","type","stateMutability","anonymous","indexed","outputs","components","_bytecode","isSuperArgs","xs","length","CrossChainSwapV2__factory","args","_swapRouterAddress","_wormholeAddress","_usdcIntegrationAddress","_usdcAddress","_wrappedNativeAddress","overrides","address","signer","utils","Interface","signerOrProvider","Contract","ContractFactory","bytecode","abi","CrossChainSwapV3__factory","IUSDCIntegration__factory","IWormhole__factory","Migrations__factory","SwapHelper__factory","UsdcLocation","RouterCore","GenericToken","EvmToken","token","decimals","provider","tokenAddress","a","makeErc20Contract","this","getDecimals","balanceOf","balanceBeforeDecimals","ethers","formatUnits","toString","amount","parseUnits","unitAmount","left","right","FixedNumber","from","addUnsafe","round","subUnsafe","o","initialize","Erc20Abi","UniEvmToken","chainId","erc20","uniToken","getAddress","Token","getContract","getBalanceOf","computeUnitAmount","formatAmount","CurrencyAmount","fromRawAmount","getUniToken","addAmounts","subtractAmounts","makeUniEvmToken","create","stringToBigNumber","value","BigNumber","makeExactInParameters","router","amountIn","minAmountOut","protocol","getProtocol","tokenIn","tokenOut","poolFee","getPoolFee","deadline","getTradeDeadline","path","makeExactOutParameters","amountOut","maxAmountIn","UniswapRouterCore","network","tokenInfo","usdcLocation","getNetwork","Out","Promise","all","usdcPairedAddress","Math","floor","Date","now","add","UniswapV3Router","poolContract","pool","FeeAmount","MEDIUM","initializeTokens","ETH_TOKEN_INFO","computePoolAddress","factoryAddress","fee","tokenA","tokenB","pairAddress","IUniswapV3PoolABI","factory","poolAddress","liquidity","slot0","slot","sqrtPriceX96","tick","bigLiq","JSBI","BigInt","negBigLiq","multiply","tickConstructorArgs","index","nearestUsableTick","TickMath","MIN_TICK","TICK_SPACINGS","liquidityNet","liquidityGross","MAX_TICK","Pool","createPool","route","Route","Trade","fromRoute","TradeType","EXACT_INPUT","EXACT_OUTPUT","slippage","computeTradeExactIn","trade","outputAmount","toSignificant","slippageMultiplier","minAmountOutWithSlippage","mulUnsafe","computeTradeExactOut","inputAmount","slippageDivisor","maxAmountInWithSlippage","divUnsafe","PROTOCOL","UniswapV2Router","pairContract","pair","undefined","Error","computePairAddress","IUniswapV2PairABI","token0","getReserves","reserves","reserve0","_reserve0","reserve1","_reserve1","toLowerCase","Pair","currencyAmountIn","computeCurrencyAmount","quote","currencyAmountOut","HurricaneswapRouter","AVAX_TOKEN_INFO","QuoteType","makeEvmProviderFromAddress","url","process","providers","StaticJsonRpcProvider","getChainIdFromAddress","CHAIN_ID_ETH","CHAIN_ID_AVAX","makeRouter","loc","EthRouter","AvaxRouter","splitSlippageInHalf","totalSlippage","divisor","UniswapToUniswapQuoter","tokenInAddress","tokenOutAddress","srcRouter","dstRouter","In","computeAndVerifyPoolAddress","computeUnitAmountOut","getTokenOutAddress","relayerFeeUsdc","singleSlippage","computeSwapSlippage","fetchExactInQuote","srcMinAmountOut","dstAmountIn","Number","getTokenInDecimals","dstAmountInAfterFee","dstMinAmountOut","params","usdcAmountIn","src","makeSrcExactInParameters","dst","makeDstExactInParameters","relayerFee","getRelayerFee","fetchExactOutQuote","dstMaxAmountIn","srcAmountOut","getTokenOutDecimals","srcAmountOutBeforeFee","srcMaxAmountIn","makeSrcExactOutParameters","makeDstExactOutParameters","setDeadline","getProvider","CROSSCHAINSWAP_GAS_PARAMETERS_EIP1559","gasLimit","maxFeePerGas","maxPriorityFeePerGas","CROSSCHAINSWAP_GAS_PARAMETERS_EVM","gasPrice","EVM_EIP1559_CHAIN_IDS","EVM_ETH_NETWORK_CHAIN_ID","EVM_POLYGON_NETWORK_CHAIN_ID","EVM_AVAX_NETWORK_CHAIN_ID","getEvmGasParametersForContract","contract","getChainIdFromContract","indexOf","evmSwapExactInFromVaaNative","swapContractWithSigner","encodedWormholeMessage","circleBridgeMessage","circleAttestation","gasParams","recvAndSwapExactNativeIn","tx","wait","evmChainId","maxAmount","TOKEN_INFOS","getSupportedSwaps","filter","x","getEvmChainId","CHAIN_ID_POLYGON","CHAIN_ID_BSC","getChainName","RELAYER_FEE_USDC","WORMHOLE_RPC_HOSTS","CORE_BRIDGE_ADDRESS_ETHEREUM","CORE_BRIDGE_ADDRESS_AVALANCHE","CIRCLE_EMITTER_ADDRESS_ETHEREUM","CIRCLE_EMITTER_ADDRESS_AVALANCHE","APPROVAL_GAS_LIMIT","NULL_SWAP_PATH","nullAddress","Buffer","alloc","makeNullSwapPath","EXECUTION_PARAMETERS_ETHEREUM","crossChainSwap","CROSSCHAINSWAP_CONTRACT_ADDRESS_ETHEREUM","wormhole","coreBridgeAddress","circleEmitterAddress","EXECUTION_PARAMETERS_AVALANCHE","CROSSCHAINSWAP_CONTRACT_ADDRESS_AVALANCHE","makeExecutionParameters","makeCrossChainSwapEvmContract","contractAddress","PROTOCOL_UNISWAP_V2","connect","addressToBytes32","wormholeChainId","hexToUint8Array","nativeToHexString","evmMakeExactInSwapParameters","recipientAddress","dstWormholeChainId","quoteParams","amountOutMinimum","targetAmountOutMinimum","targetChainRecipient","makePathArray","concat","evmApproveAndSwapExactIn","srcProvider","srcWallet","srcExecutionParams","dstExecutionParams","isNative","swapContractParams","contractWithSigner","swapParams","pathArray","dstContractAddress","transactionParams","console","info","swapExactNativeInAndTransfer","swapExactInFromVaa","dstProvider","dstWallet","dstProtocol","UniswapToUniswapExecutor","quoter","cachedExactInParams","cachedExactOutParams","quoteType","relayerFeeAmount","transportFactory","vaaSearchParams","vaaBytes","srcEvmReceipt","dstEvmReceipt","srcTerraReceipt","dstTerraReceipt","getSrcChainId","getDstChainId","setDeadlines","computeAndVerifySrcPoolAddress","computeAndVerifyDstPoolAddress","areSwapParametersUndefined","computeExactInParameters","ExactIn","computeExactOutParameters","ExactOut","getSrcEvmProvider","getDstEvmProvider","getTokenInAddress","wallet","fetchAndSetEvmEmitterAndSequence","receipt","wormholeParams","sequence","parseSequenceFromLogEth","emitterAddress","getEmitterAddressEth","getSignedVAAWithRetry","transport","vaaResponse","fetchSignedVaaFromSwap","evmSwapExactInFromVaa","SWAP_CONTRACT_ADDRESS","useStyles","makeStyles","theme","root","position","button","marginTop","spacing","textTransform","width","loader","bottom","marginLeft","marginBottom","error","textAlign","ButtonWithLoader","disabled","onClick","showLoader","children","className","classes","Button","color","variant","CircularProgress","size","Typography","EthereumProviderContext","React","createContext","disconnect","signerAddress","providerError","EthereumProviderProvider","useState","setProviderError","setProvider","setChainId","setSigner","setSignerAddress","useCallback","detectEthereumProvider","then","detectedProvider","Web3Provider","send","catch","getSigner","on","toNumber","e","accounts","contextValue","useMemo","Provider","useEthereumProvider","useContext","display","margin","maxWidth","ToggleConnectedButton","connected","pk","is0x","startsWith","Tooltip","title","substring","substr","EthereumSignerKey","select","alignItems","listItemIcon","minWidth","icon","height","getLogo","ethIcon","avaxIcon","TokenSelect","tokens","onChange","TextField","fullWidth","map","MenuItem","ListItemIcon","alt","ListItemText","createTokenMenuItem","COLORS","responsiveFontSizes","createTheme","palette","background","default","paper","divider","text","primary","main","light","secondary","typography","fontFamily","h1","fontWeight","h2","h4","MuiCssBaseline","scrollbarWidth","scrollbarColor","backgroundColor","borderRadius","MuiAccordion","rounded","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","MuiAlert","border","MuiButton","MuiLink","MuiPaper","MuiStepper","padding","MuiStep","MuiStepConnector","lineVertical","borderLeftWidth","MuiStepContent","MuiStepLabel","label","fontSize","MuiTab","MM_ERR_WITH_INFO_START","parseError","data","message","replace","response","topScrollPaper","topPaperScrollBody","verticalAlign","float","clamp","min","max","isNaN","Settings","onSlippageChange","onDeadlineChange","dialogIsOpen","setDialogIsOpen","dialog","Dialog","open","onClose","scroll","DialogTitle","id","DialogContent","InputProps","endAdornment","InputAdornment","event","target","parseFloat","disableRipple","endIcon","CircleLoader","TransactionProgress","txBlockNumber","hasSignedVAA","isTargetSwapComplete","currentBlock","setCurrentBlock","useEffect","isEVMChain","cancelled","resolve","setTimeout","getBlockNumber","newBlock","valueBuffer","blockDiff","expectedBlocks","LinearProgress","footer","socialIcon","builtWithContainer","justifyContent","opacity","wormholeIcon","transition","marginRight","Footer","IconButton","href","rel","Docs","Discord","Github","Medium","Telegram","Twitter","Wormhole","testnet","chainID","lcd","walletConnectChainIds","TerraWalletContext","TerraWalletWrapper","terraWallet","useWallet","setWallet","setConnected","availableConnectTypes","TerraWalletProvider","defaultNetwork","TerraWalletKey","wallets","terraAddress","createWalletStatus","isReady","statusMessage","forceNetworkSwitch","walletAddress","useIsWalletReady","enableNetworkAutoswitch","autoSwitch","useConnectedWallet","hasTerraWallet","hasEthInfo","correctEvmNetwork","hasCorrectEvmNetwork","hexStripZeros","hexlify","CHAIN_ID_TERRA","bg","flexDirection","minHeight","centeredContainer","mainPaper","numberField","flexGrow","caretShape","webkitAppearance","gradientButton","backgroundImage","backgroundSize","boxShadow","backgroundPosition","spacer","titleBar","alignSelf","tokenSelectWrapper","loaderHolder","successIcon","swapPath","switchEvmProviderNetwork","ConnectedWalletAddress","prefix","SwapButton","source","isSourceWalletReady","isTargetWalletReady","Home","sourceTokenInfo","setSourceTokenInfo","targetTokenInfo","setTargetTokenInfo","setAmountIn","amountInUSDC","setAmountInUSDC","setAmountOut","setSlippage","executor","setExecutor","isSwapping","setIsSwapping","isComputingQuote","setIsComputingQuote","hasQuote","setHasQuote","enqueueSnackbar","useSnackbar","isSourceSwapComplete","setIsSourceSwapComplete","setIsTargetSwapComplete","sourceTxBlockNumber","setSourceTxBlockNumber","setHasSignedVAA","relayerTimeoutString","setRelayerTimeoutString","computeQuote","setRelayerFee","computeQuoteExactIn","toFixed","content","Alert","severity","debouncedComputeQuote","useDebouncedCallback","handleAmountChange","handleSlippageChange","handleDeadlineChange","handleSourceChange","find","supportedSwaps","handleTargetChange","reset","handleSwapClick","log","evmApproveAndSwap","sourceReceipt","transactionHash","blockNumber","parseVM","parsed","circleEmitter","isCompleted","retries","isMessageConsumed","hash","fetchVaaAndSwap","targetReceipt","readyToSwap","disableSelect","Container","Paper","Collapse","in","disableUnderline","placeholder","autoFocus","inputProps","readOnly","CheckCircleOutlineRounded","ArrowForward","style","Link","App","ErrorBoundary","props","state","hasError","errorInfo","Component","ReactDOM","render","ThemeProvider","CssBaseline","maxSnack","document","getElementById"],"mappings":"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C,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,GACRE,KAAM,OACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,SACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,SACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,iBACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,iBACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,aACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,aACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,KACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,YAGVD,KAAM,eACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,UACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,UACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,YACNC,KAAM,YAGVC,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,QACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,qBACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,iBACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,eACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,KACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,YAGVD,KAAM,kBACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,cACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,YACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,YACNC,KAAM,YAGVC,gBAAiB,UACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,SACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,SACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,YACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,aACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,aACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,KACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,YAGVD,KAAM,kBACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,UACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,UACNC,KAAM,YAGVC,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,QACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,YACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,iBACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,eACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,KACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,YAGVD,KAAM,qBACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,cACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,YACNC,KAAM,YAGVC,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,SACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,SACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,YACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,aACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,aACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,KACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,WAER,CACEF,aAAc,OACdC,KAAM,aACNC,KAAM,QAER,CACEF,aAAc,QACdC,KAAM,IACNC,KAAM,SAER,CACEF,aAAc,UACdC,KAAM,IACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,IACNC,KAAM,YAGVD,KAAM,4BACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,UACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,UACNC,KAAM,YAGVC,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,QACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,YACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,iBACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,eACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,KACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,WAER,CACEF,aAAc,OACdC,KAAM,aACNC,KAAM,QAER,CACEF,aAAc,QACdC,KAAM,IACNC,KAAM,SAER,CACEF,aAAc,UACdC,KAAM,IACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,IACNC,KAAM,YAGVD,KAAM,+BACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,cACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,YACNC,KAAM,YAGVC,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,WACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,eACNC,KAAM,WAER,CACEF,aAAc,YACdC,KAAM,OACNC,KAAM,aAER,CACEF,aAAc,UACdC,KAAM,KACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,YAGVD,KAAM,2BACNK,QAAS,CACP,CACEN,aAAc,YACdC,KAAM,UACNC,KAAM,cAGVC,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,YACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,cACNC,KAAM,WAER,CACEF,aAAc,YACdC,KAAM,OACNC,KAAM,aAER,CACEF,aAAc,UACdC,KAAM,KACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,YAGVD,KAAM,2BACNK,QAAS,CACP,CACEN,aAAc,YACdC,KAAM,UACNC,KAAM,cAGVC,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,eACNC,KAAM,WAER,CACEF,aAAc,YACdC,KAAM,OACNC,KAAM,aAER,CACEF,aAAc,UACdC,KAAM,KACNC,KAAM,WAER,CACEF,aAAc,UAC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D,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,YACNC,KAAM,WAER,CACEF,aAAc,YACdC,KAAM,OACNC,KAAM,cAGVD,KAAM,eACNK,QAAS,CACP,CACEN,aAAc,YACdC,KAAM,UACNC,KAAM,cAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,WACNC,KAAM,WAER,CACEF,aAAc,YACdC,KAAM,OACNC,KAAM,cAGVD,KAAM,gBACNK,QAAS,CACP,CACEN,aAAc,YACdC,KAAM,UACNC,KAAM,cAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,UACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,YAGVD,KAAM,QACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,UACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,SACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,SACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,YACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,aACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,aACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,KACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,YAGVD,KAAM,kBACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,UACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,UACNC,KAAM,YAGVC,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,QACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,YACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,iBACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,eACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,KACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,YAGVD,KAAM,qBACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,cACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,YACNC,KAAM,YAGVC,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,QACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,YACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,iBACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,eACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,KACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,WAER,CACEF,aAAc,OACdC,KAAM,aACNC,KAAM,QAER,CACEF,aAAc,QACdC,KAAM,IACNC,KAAM,SAER,CACEF,aAAc,UACdC,KAAM,IACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,IACNC,KAAM,YAGVD,KAAM,+BACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,cACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,YACNC,KAAM,YAGVC,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,SACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,SACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,YACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,aACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,aACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,KACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,WAER,CACEF,aAAc,OACdC,KAAM,aACNC,KAAM,QAER,CACEF,aAAc,QACdC,KAAM,IACNC,KAAM,SAER,CACEF,aAAc,UACdC,KAAM,IACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,IACNC,KAAM,YAGVD,KAAM,4BACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,UACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,UACNC,KAAM,YAGVC,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,YACNC,KAAM,WAER,CACEF,aAAc,YACdC,KAAM,OACNC,KAAM,aAER,CACEF,aAAc,UACdC,KAAM,KACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,YAGVD,KAAM,wBACNK,QAAS,CACP,CACEN,aAAc,YACdC,KAAM,UACNC,KAAM,cAGVC,gBAAiB,UACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,eACNC,KAAM,WAER,CACEF,aAAc,YACdC,KAAM,OACNC,KAAM,aAER,CACEF,aAAc,UACdC,KAAM,KACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,YAGVD,KAAM,wBACNK,QAAS,CACP,CACEN,aAAc,YACdC,KAAM,UACNC,KAAM,cAGVC,gBAAiB,UACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,WACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,eACNC,KAAM,WAER,CACEF,aAAc,YACdC,KAAM,OACNC,KAAM,aAER,CACEF,aAAc,UACdC,KAAM,KACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,YAGVD,KAAM,wBACNK,QAAS,CACP,CACEN,aAAc,YACdC,KAAM,UACNC,KAAM,cAGVC,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,WACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,eACNC,KAAM,WAER,CACEF,aAAc,YACdC,KAAM,OACNC,KAAM,aAER,CACEF,aAAc,UACdC,KAAM,KACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,YAGVD,KAAM,2BACNK,QAAS,CACP,CACEN,aAAc,YACdC,KAAM,UACNC,KAAM,cAGVC,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,YACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,cACNC,KAAM,WAER,CACEF,aAAc,YACdC,KAAM,OACNC,KAAM,aAER,CACEF,aAAc,UACdC,KAAM,KACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,YAGVD,KAAM,wBACNK,QAAS,CACP,CACEN,aAAc,YACdC,KAAM,UACNC,KAAM,cAGVC,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,YACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,cACNC,KAAM,WAER,CACEF,aAAc,YACdC,KAAM,OACNC,KAAM,aAER,CACEF,aAAc,UACdC,KAAM,KACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,YAGVD,KAAM,2BACNK,QAAS,CACP,CACEN,aAAc,YACdC,KAAM,UACNC,KAAM,cAGVC,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,QACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,YACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,iBACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,eACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,KACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,YAGVD,KAAM,kDACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,YACNC,KAAM,YAGVC,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,QACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,YACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,iBACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,eACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,KACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,WAER,CACEF,aAAc,OACdC,KAAM,aACNC,KAAM,QAER,CACEF,aAAc,QACdC,KAAM,IACNC,KAAM,SAER,CACEF,aAAc,UACdC,KAAM,IACNC,KAAM,WAE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CEP,aAAc,QACdC,KAAM,UACNC,KAAM,SAER,CACEF,aAAc,SACdC,KAAM,YACNC,KAAM,UAER,CACEF,aAAc,SACdC,KAAM,QACNC,KAAM,UAER,CACEF,aAAc,SACdC,KAAM,iBACNC,KAAM,UAER,CACEF,aAAc,UACdC,KAAM,iBACNC,KAAM,WAER,CACEF,aAAc,SACdC,KAAM,WACNC,KAAM,UAER,CACEF,aAAc,QACdC,KAAM,mBACNC,KAAM,SAER,CACEF,aAAc,QACdC,KAAM,UACNC,KAAM,SAER,CACEF,aAAc,SACdC,KAAM,mBACNC,KAAM,UAER,CACEK,WAAY,CACV,CACEP,aAAc,UACdC,KAAM,IACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,IACNC,KAAM,WAER,CACEF,aAAc,QACdC,KAAM,IACNC,KAAM,SAER,CACEF,aAAc,QACdC,KAAM,gBACNC,KAAM,UAGVF,aAAc,+BACdC,KAAM,aACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,OACNC,KAAM,YAGVF,aAAc,sBACdC,KAAM,KACNC,KAAM,SAER,CACEF,aAAc,OACdC,KAAM,QACNC,KAAM,QAER,CACEF,aAAc,SACdC,KAAM,SACNC,KAAM,WAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEQ,WAAY,CACV,CACEP,aAAc,QACdC,KAAM,UACNC,KAAM,SAER,CACEF,aAAc,SACdC,KAAM,YACNC,KAAM,UAER,CACEF,aAAc,SACdC,KAAM,QACNC,KAAM,UAER,CACEF,aAAc,SACdC,KAAM,iBACNC,KAAM,UAER,CACEF,aAAc,UACdC,KAAM,iBACNC,KAAM,WAER,CACEF,aAAc,SACdC,KAAM,WACNC,KAAM,UAER,CACEF,aAAc,QACdC,KAAM,mBACNC,KAAM,SAER,CACEF,aAAc,QACdC,KAAM,UACNC,KAAM,SAER,CACEF,aAAc,SACdC,KAAM,mBACNC,KAAM,UAER,CACEK,WAAY,CACV,CACEP,aAAc,UACdC,KAAM,IACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,IACNC,KAAM,WAER,CACEF,aAAc,QACdC,KAAM,IACNC,KAAM,SAER,CACEF,aAAc,QACdC,KAAM,gBACNC,KAAM,UAGVF,aAAc,+BACdC,KAAM,aACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,OACNC,KAAM,YAGVF,aAAc,sBACdC,KAAM,KACNC,KAAM,UAGVD,KAAM,WACNK,QAAS,CACP,CACEN,aAAc,OACdC,KAAM,QACNC,KAAM,QAER,CACEF,aAAc,SACdC,KAAM,SACNC,KAAM,WAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,OACNC,KAAM,WAER,CACEK,WAAY,CACV,CACEP,aAAc,UACdC,KAAM,IACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,IACNC,KAAM,WAER,CACEF,aAAc,QACdC,KAAM,IACNC,KAAM,SAER,CACEF,aAAc,QACdC,KAAM,gBACNC,KAAM,UAGVF,aAAc,+BACdC,KAAM,aACNC,KAAM,WAER,CACEK,WAAY,CACV,CACEP,aAAc,YACdC,KAAM,OACNC,KAAM,aAER,CACEF,aAAc,SACdC,KAAM,iBACNC,KAAM,WAGVF,aAAc,+BACdC,KAAM,cACNC,KAAM,UAGVD,KAAM,mBACNK,QAAS,CACP,CACEN,aAAc,OACdC,KAAM,QACNC,KAAM,QAER,CACEF,aAAc,SACdC,KAAM,SACNC,KAAM,WAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,QACdC,KAAM,YACNC,KAAM,UAGVD,KAAM,UACNK,QAAS,CACP,CACEC,WAAY,CACV,CACEP,aAAc,QACdC,KAAM,UACNC,KAAM,SAER,CACEF,aAAc,SACdC,KAAM,YACNC,KAAM,UAER,CACEF,aAAc,SACdC,KAAM,QACNC,KAAM,UAER,CACEF,aAAc,SACdC,KAAM,iBACNC,KAAM,UAER,CACEF,aAAc,UACdC,KAAM,iBACNC,KAAM,WAER,CACEF,aAAc,SACdC,KAAM,WACNC,KAAM,UAER,CACEF,aAAc,QACdC,KAAM,mBACNC,KAAM,SAER,CACEF,aAAc,QACdC,KAAM,UACNC,KAAM,SA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","file":"static/js/main.ff1f31b1.chunk.js","sourcesContent":["/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport { Signer, utils, Contract, ContractFactory, Overrides } from \"ethers\";\nimport type { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport type { PromiseOrValue } from \"../common\";\nimport type {\n  CrossChainSwapV2,\n  CrossChainSwapV2Interface,\n} from \"../CrossChainSwapV2\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_swapRouterAddress\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_wormholeAddress\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_usdcIntegrationAddress\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_usdcAddress\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_wrappedNativeAddress\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"_recipient\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"_tokenOut\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"_from\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"_amountOut\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint8\",\n        name: \"_success\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"SwapResult\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"SWAP_ROUTER\",\n    outputs: [\n      {\n        internalType: \"contract IUniswapV2Router02\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"USDC_ADDRESS\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"USDC_INTEGRATION\",\n    outputs: [\n      {\n        internalType: \"contract IUSDCIntegration\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"WORMHOLE\",\n    outputs: [\n      {\n        internalType: \"contract IWormhole\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"WRAPPED_NATIVE_ADDRESS\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes\",\n        name: \"encoded\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"decodeSwapInParameters\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"estimatedAmount\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"recipientAddress\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"address[2]\",\n            name: \"path\",\n            type: \"address[2]\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"deadline\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint24\",\n            name: \"poolFee\",\n            type: \"uint24\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"relayerFee\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct SwapHelper.RecvSwapInParameters\",\n        name: \"params\",\n        type: \"tuple\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    stateMutability: \"payable\",\n    type: \"receive\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"amountIn\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"amountOutMinimum\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"targetAmountOutMinimum\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"targetChainRecipient\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"deadline\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint24\",\n            name: \"poolFee\",\n            type: \"uint24\",\n          },\n        ],\n        internalType: \"struct SwapHelper.ExactInParameters\",\n        name: \"swapParams\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"path\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"relayerFee\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"targetChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"targetContractAddress\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"swapExactNativeInAndTransfer\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"bytes\",\n            name: \"encodedWormholeMessage\",\n            type: \"bytes\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"circleBridgeMessage\",\n            type: \"bytes\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"circleAttestation\",\n            type: \"bytes\",\n          },\n        ],\n        internalType: \"struct IUSDCIntegration.RedeemParameters\",\n        name: \"usdcIntegrationParams\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"recvAndSwapExactNativeIn\",\n    outputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"\";\n\ntype CrossChainSwapV2ConstructorParams =\n  | [signer?: Signer]\n  | ConstructorParameters<typeof ContractFactory>;\n\nconst isSuperArgs = (\n  xs: CrossChainSwapV2ConstructorParams\n): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;\n\nexport class CrossChainSwapV2__factory extends ContractFactory {\n  constructor(...args: CrossChainSwapV2ConstructorParams) {\n    if (isSuperArgs(args)) {\n      super(...args);\n    } else {\n      super(_abi, _bytecode, args[0]);\n    }\n  }\n\n  override deploy(\n    _swapRouterAddress: PromiseOrValue<string>,\n    _wormholeAddress: PromiseOrValue<string>,\n    _usdcIntegrationAddress: PromiseOrValue<string>,\n    _usdcAddress: PromiseOrValue<string>,\n    _wrappedNativeAddress: PromiseOrValue<string>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<CrossChainSwapV2> {\n    return super.deploy(\n      _swapRouterAddress,\n      _wormholeAddress,\n      _usdcIntegrationAddress,\n      _usdcAddress,\n      _wrappedNativeAddress,\n      overrides || {}\n    ) as Promise<CrossChainSwapV2>;\n  }\n  override getDeployTransaction(\n    _swapRouterAddress: PromiseOrValue<string>,\n    _wormholeAddress: PromiseOrValue<string>,\n    _usdcIntegrationAddress: PromiseOrValue<string>,\n    _usdcAddress: PromiseOrValue<string>,\n    _wrappedNativeAddress: PromiseOrValue<string>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): TransactionRequest {\n    return super.getDeployTransaction(\n      _swapRouterAddress,\n      _wormholeAddress,\n      _usdcIntegrationAddress,\n      _usdcAddress,\n      _wrappedNativeAddress,\n      overrides || {}\n    );\n  }\n  override attach(address: string): CrossChainSwapV2 {\n    return super.attach(address) as CrossChainSwapV2;\n  }\n  override connect(signer: Signer): CrossChainSwapV2__factory {\n    return super.connect(signer) as CrossChainSwapV2__factory;\n  }\n\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): CrossChainSwapV2Interface {\n    return new utils.Interface(_abi) as CrossChainSwapV2Interface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): CrossChainSwapV2 {\n    return new Contract(address, _abi, signerOrProvider) as CrossChainSwapV2;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport { Signer, utils, Contract, ContractFactory, Overrides } from \"ethers\";\nimport type { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport type { PromiseOrValue } from \"../common\";\nimport type {\n  CrossChainSwapV3,\n  CrossChainSwapV3Interface,\n} from \"../CrossChainSwapV3\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_swapRouterAddress\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_wormholeAddress\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_usdcIntegrationAddress\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_usdcAddress\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_wrappedNativeAddress\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"_recipient\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"_tokenOut\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"_from\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"_amountOut\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint8\",\n        name: \"_success\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"SwapResult\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"SWAP_ROUTER\",\n    outputs: [\n      {\n        internalType: \"contract IUniswapRouter\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"USDC_ADDRESS\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"USDC_INTEGRATION\",\n    outputs: [\n      {\n        internalType: \"contract IUSDCIntegration\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"WORMHOLE\",\n    outputs: [\n      {\n        internalType: \"contract IWormhole\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"WRAPPED_NATIVE_ADDRESS\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes\",\n        name: \"encoded\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"decodeSwapInParameters\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"estimatedAmount\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"recipientAddress\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"address[2]\",\n            name: \"path\",\n            type: \"address[2]\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"deadline\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint24\",\n            name: \"poolFee\",\n            type: \"uint24\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"relayerFee\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct SwapHelper.RecvSwapInParameters\",\n        name: \"params\",\n        type: \"tuple\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    stateMutability: \"payable\",\n    type: \"receive\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"amountIn\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"amountOutMinimum\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"targetAmountOutMinimum\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"targetChainRecipient\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"deadline\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint24\",\n            name: \"poolFee\",\n            type: \"uint24\",\n          },\n        ],\n        internalType: \"struct SwapHelper.ExactInParameters\",\n        name: \"swapParams\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"path\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"relayerFee\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"targetChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"targetContractAddress\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"swapExactNativeInAndTransfer\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"bytes\",\n            name: \"encodedWormholeMessage\",\n            type: \"bytes\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"circleBridgeMessage\",\n            type: \"bytes\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"circleAttestation\",\n            type: \"bytes\",\n          },\n        ],\n        internalType: \"struct IUSDCIntegration.RedeemParameters\",\n        name: \"usdcIntegrationParams\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"recvAndSwapExactNativeIn\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountOut\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"\";\n\ntype CrossChainSwapV3ConstructorParams =\n  | [signer?: Signer]\n  | ConstructorParameters<typeof ContractFactory>;\n\nconst isSuperArgs = (\n  xs: CrossChainSwapV3ConstructorParams\n): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;\n\nexport class CrossChainSwapV3__factory extends ContractFactory {\n  constructor(...args: CrossChainSwapV3ConstructorParams) {\n    if (isSuperArgs(args)) {\n      super(...args);\n    } else {\n      super(_abi, _bytecode, args[0]);\n    }\n  }\n\n  override deploy(\n    _swapRouterAddress: PromiseOrValue<string>,\n    _wormholeAddress: PromiseOrValue<string>,\n    _usdcIntegrationAddress: PromiseOrValue<string>,\n    _usdcAddress: PromiseOrValue<string>,\n    _wrappedNativeAddress: PromiseOrValue<string>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<CrossChainSwapV3> {\n    return super.deploy(\n      _swapRouterAddress,\n      _wormholeAddress,\n      _usdcIntegrationAddress,\n      _usdcAddress,\n      _wrappedNativeAddress,\n      overrides || {}\n    ) as Promise<CrossChainSwapV3>;\n  }\n  override getDeployTransaction(\n    _swapRouterAddress: PromiseOrValue<string>,\n    _wormholeAddress: PromiseOrValue<string>,\n    _usdcIntegrationAddress: PromiseOrValue<string>,\n    _usdcAddress: PromiseOrValue<string>,\n    _wrappedNativeAddress: PromiseOrValue<string>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): TransactionRequest {\n    return super.getDeployTransaction(\n      _swapRouterAddress,\n      _wormholeAddress,\n      _usdcIntegrationAddress,\n      _usdcAddress,\n      _wrappedNativeAddress,\n      overrides || {}\n    );\n  }\n  override attach(address: string): CrossChainSwapV3 {\n    return super.attach(address) as CrossChainSwapV3;\n  }\n  override connect(signer: Signer): CrossChainSwapV3__factory {\n    return super.connect(signer) as CrossChainSwapV3__factory;\n  }\n\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): CrossChainSwapV3Interface {\n    return new utils.Interface(_abi) as CrossChainSwapV3Interface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): CrossChainSwapV3 {\n    return new Contract(address, _abi, signerOrProvider) as CrossChainSwapV3;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport type { Provider } from \"@ethersproject/providers\";\nimport type { IERC20, IERC20Interface } from \"../IERC20\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nexport class IERC20__factory {\n  static readonly abi = _abi;\n  static createInterface(): IERC20Interface {\n    return new utils.Interface(_abi) as IERC20Interface;\n  }\n  static connect(address: string, signerOrProvider: Signer | Provider): IERC20 {\n    return new Contract(address, _abi, signerOrProvider) as IERC20;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport type { Provider } from \"@ethersproject/providers\";\nimport type { IERC20Permit, IERC20PermitInterface } from \"../IERC20Permit\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"r\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"s\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"permit\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n    ],\n    name: \"nonces\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"DOMAIN_SEPARATOR\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nexport class IERC20Permit__factory {\n  static readonly abi = _abi;\n  static createInterface(): IERC20PermitInterface {\n    return new utils.Interface(_abi) as IERC20PermitInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IERC20Permit {\n    return new Contract(address, _abi, signerOrProvider) as IERC20Permit;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport type { Provider } from \"@ethersproject/providers\";\nimport type { ISwapRouter, ISwapRouterInterface } from \"../ISwapRouter\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"int256\",\n        name: \"amount0Delta\",\n        type: \"int256\",\n      },\n      {\n        internalType: \"int256\",\n        name: \"amount1Delta\",\n        type: \"int256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"uniswapV3SwapCallback\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"tokenIn\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"tokenOut\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint24\",\n            name: \"fee\",\n            type: \"uint24\",\n          },\n          {\n            internalType: \"address\",\n            name: \"recipient\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"deadline\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"amountIn\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"amountOutMinimum\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint160\",\n            name: \"sqrtPriceLimitX96\",\n            type: \"uint160\",\n          },\n        ],\n        internalType: \"struct ISwapRouter.ExactInputSingleParams\",\n        name: \"params\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"exactInputSingle\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountOut\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"bytes\",\n            name: \"path\",\n            type: \"bytes\",\n          },\n          {\n            internalType: \"address\",\n            name: \"recipient\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"deadline\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"amountIn\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"amountOutMinimum\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct ISwapRouter.ExactInputParams\",\n        name: \"params\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"exactInput\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountOut\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"tokenIn\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"tokenOut\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint24\",\n            name: \"fee\",\n            type: \"uint24\",\n          },\n          {\n            internalType: \"address\",\n            name: \"recipient\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"deadline\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"amountOut\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"amountInMaximum\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint160\",\n            name: \"sqrtPriceLimitX96\",\n            type: \"uint160\",\n          },\n        ],\n        internalType: \"struct ISwapRouter.ExactOutputSingleParams\",\n        name: \"params\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"exactOutputSingle\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountIn\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"bytes\",\n            name: \"path\",\n            type: \"bytes\",\n          },\n          {\n            internalType: \"address\",\n            name: \"recipient\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"deadline\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"amountOut\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"amountInMaximum\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct ISwapRouter.ExactOutputParams\",\n        name: \"params\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"exactOutput\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountIn\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n];\n\nexport class ISwapRouter__factory {\n  static readonly abi = _abi;\n  static createInterface(): ISwapRouterInterface {\n    return new utils.Interface(_abi) as ISwapRouterInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): ISwapRouter {\n    return new Contract(address, _abi, signerOrProvider) as ISwapRouter;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport type { Provider } from \"@ethersproject/providers\";\nimport type {\n  IUSDCIntegration,\n  IUSDCIntegrationInterface,\n} from \"../IUSDCIntegration\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"targetChain\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"mintRecipient\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"payload\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"transferTokensWithPayload\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"messageSequence\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"bytes\",\n            name: \"encodedWormholeMessage\",\n            type: \"bytes\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"circleBridgeMessage\",\n            type: \"bytes\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"circleAttestation\",\n            type: \"bytes\",\n          },\n        ],\n        internalType: \"struct IUSDCIntegration.RedeemParameters\",\n        name: \"params\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"redeemTokensWithPayload\",\n    outputs: [\n      {\n        components: [\n          {\n            components: [\n              {\n                internalType: \"uint8\",\n                name: \"payloadId\",\n                type: \"uint8\",\n              },\n              {\n                internalType: \"bytes32\",\n                name: \"token\",\n                type: \"bytes32\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"amount\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"uint32\",\n                name: \"sourceDomain\",\n                type: \"uint32\",\n              },\n              {\n                internalType: \"uint32\",\n                name: \"targetDomain\",\n                type: \"uint32\",\n              },\n              {\n                internalType: \"uint64\",\n                name: \"nonce\",\n                type: \"uint64\",\n              },\n              {\n                internalType: \"bytes32\",\n                name: \"circleSender\",\n                type: \"bytes32\",\n              },\n            ],\n            internalType: \"struct IUSDCIntegration.WormholeDeposit\",\n            name: \"depositHeader\",\n            type: \"tuple\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"mintRecipient\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"payload\",\n            type: \"bytes\",\n          },\n        ],\n        internalType: \"struct IUSDCIntegration.WormholeDepositWithPayload\",\n        name: \"wormholeDepositWithPayload\",\n        type: \"tuple\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"hash\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"isMessageConsumed\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nexport class IUSDCIntegration__factory {\n  static readonly abi = _abi;\n  static createInterface(): IUSDCIntegrationInterface {\n    return new utils.Interface(_abi) as IUSDCIntegrationInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IUSDCIntegration {\n    return new Contract(address, _abi, signerOrProvider) as IUSDCIntegration;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport type { Provider } from \"@ethersproject/providers\";\nimport type {\n  IUniswapRouter,\n  IUniswapRouterInterface,\n} from \"../IUniswapRouter\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"bytes\",\n            name: \"path\",\n            type: \"bytes\",\n          },\n          {\n            internalType: \"address\",\n            name: \"recipient\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"deadline\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"amountIn\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"amountOutMinimum\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct ISwapRouter.ExactInputParams\",\n        name: \"params\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"exactInput\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountOut\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"tokenIn\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"tokenOut\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint24\",\n            name: \"fee\",\n            type: \"uint24\",\n          },\n          {\n            internalType: \"address\",\n            name: \"recipient\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"deadline\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"amountIn\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"amountOutMinimum\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint160\",\n            name: \"sqrtPriceLimitX96\",\n            type: \"uint160\",\n          },\n        ],\n        internalType: \"struct ISwapRouter.ExactInputSingleParams\",\n        name: \"params\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"exactInputSingle\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountOut\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"bytes\",\n            name: \"path\",\n            type: \"bytes\",\n          },\n          {\n            internalType: \"address\",\n            name: \"recipient\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"deadline\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"amountOut\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"amountInMaximum\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct ISwapRouter.ExactOutputParams\",\n        name: \"params\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"exactOutput\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountIn\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"tokenIn\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"tokenOut\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint24\",\n            name: \"fee\",\n            type: \"uint24\",\n          },\n          {\n            internalType: \"address\",\n            name: \"recipient\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"deadline\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"amountOut\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"amountInMaximum\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint160\",\n            name: \"sqrtPriceLimitX96\",\n            type: \"uint160\",\n          },\n        ],\n        internalType: \"struct ISwapRouter.ExactOutputSingleParams\",\n        name: \"params\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"exactOutputSingle\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountIn\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"int256\",\n        name: \"amount0Delta\",\n        type: \"int256\",\n      },\n      {\n        internalType: \"int256\",\n        name: \"amount1Delta\",\n        type: \"int256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"uniswapV3SwapCallback\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"refundETH\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n];\n\nexport class IUniswapRouter__factory {\n  static readonly abi = _abi;\n  static createInterface(): IUniswapRouterInterface {\n    return new utils.Interface(_abi) as IUniswapRouterInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IUniswapRouter {\n    return new Contract(address, _abi, signerOrProvider) as IUniswapRouter;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport type { Provider } from \"@ethersproject/providers\";\nimport type {\n  IUniswapV2Router01,\n  IUniswapV2Router01Interface,\n} from \"../IUniswapV2Router01\";\n\nconst _abi = [\n  {\n    inputs: [],\n    name: \"factory\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"WETH\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"tokenA\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"tokenB\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountADesired\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountBDesired\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountAMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountBMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"addLiquidity\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountA\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountB\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"liquidity\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountTokenDesired\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountTokenMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountETHMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"addLiquidityETH\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountToken\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountETH\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"liquidity\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"tokenA\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"tokenB\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"liquidity\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountAMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountBMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"removeLiquidity\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountA\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountB\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"liquidity\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountTokenMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountETHMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"removeLiquidityETH\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountToken\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountETH\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"tokenA\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"tokenB\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"liquidity\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountAMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountBMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"approveMax\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"r\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"s\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"removeLiquidityWithPermit\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountA\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountB\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"liquidity\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountTokenMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountETHMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"approveMax\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"r\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"s\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"removeLiquidityETHWithPermit\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountToken\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountETH\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountIn\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountOutMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"path\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"swapExactTokensForTokens\",\n    outputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountOut\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountInMax\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"path\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"swapTokensForExactTokens\",\n    outputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountOutMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"path\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"swapExactETHForTokens\",\n    outputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountOut\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountInMax\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"path\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"swapTokensForExactETH\",\n    outputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountIn\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountOutMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"path\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"swapExactTokensForETH\",\n    outputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountOut\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"path\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"swapETHForExactTokens\",\n    outputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountA\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"reserveA\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"reserveB\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"quote\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountB\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountIn\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"reserveIn\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"reserveOut\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getAmountOut\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountOut\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountOut\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"reserveIn\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"reserveOut\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getAmountIn\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountIn\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountIn\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"path\",\n        type: \"address[]\",\n      },\n    ],\n    name: \"getAmountsOut\",\n    outputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountOut\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"path\",\n        type: \"address[]\",\n      },\n    ],\n    name: \"getAmountsIn\",\n    outputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nexport class IUniswapV2Router01__factory {\n  static readonly abi = _abi;\n  static createInterface(): IUniswapV2Router01Interface {\n    return new utils.Interface(_abi) as IUniswapV2Router01Interface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IUniswapV2Router01 {\n    return new Contract(address, _abi, signerOrProvider) as IUniswapV2Router01;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport type { Provider } from \"@ethersproject/providers\";\nimport type {\n  IUniswapV2Router02,\n  IUniswapV2Router02Interface,\n} from \"../IUniswapV2Router02\";\n\nconst _abi = [\n  {\n    inputs: [],\n    name: \"WETH\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"tokenA\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"tokenB\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountADesired\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountBDesired\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountAMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountBMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"addLiquidity\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountA\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountB\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"liquidity\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountTokenDesired\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountTokenMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountETHMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"addLiquidityETH\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountToken\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountETH\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"liquidity\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"factory\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountOut\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"reserveIn\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"reserveOut\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getAmountIn\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountIn\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountIn\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"reserveIn\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"reserveOut\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getAmountOut\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountOut\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountOut\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"path\",\n        type: \"address[]\",\n      },\n    ],\n    name: \"getAmountsIn\",\n    outputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountIn\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"path\",\n        type: \"address[]\",\n      },\n    ],\n    name: \"getAmountsOut\",\n    outputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountA\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"reserveA\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"reserveB\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"quote\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountB\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"tokenA\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"tokenB\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"liquidity\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountAMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountBMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"removeLiquidity\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountA\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountB\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"liquidity\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountTokenMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountETHMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"removeLiquidityETH\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountToken\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountETH\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"liquidity\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountTokenMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountETHMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"approveMax\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"r\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"s\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"removeLiquidityETHWithPermit\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountToken\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountETH\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"tokenA\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"tokenB\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"liquidity\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountAMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountBMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"approveMax\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"r\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"s\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"removeLiquidityWithPermit\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountA\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountB\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountOut\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"path\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"swapETHForExactTokens\",\n    outputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountOutMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"path\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"swapExactETHForTokens\",\n    outputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountIn\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountOutMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"path\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"swapExactTokensForETH\",\n    outputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountIn\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountOutMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"path\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"swapExactTokensForTokens\",\n    outputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountOut\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountInMax\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"path\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"swapTokensForExactETH\",\n    outputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountOut\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountInMax\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"path\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"swapTokensForExactTokens\",\n    outputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"liquidity\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountTokenMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountETHMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"removeLiquidityETHSupportingFeeOnTransferTokens\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountETH\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"liquidity\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountTokenMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountETHMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"approveMax\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"r\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"s\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountETH\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountIn\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountOutMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"path\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountOutMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"path\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"swapExactETHForTokensSupportingFeeOnTransferTokens\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountIn\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountOutMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"path\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"swapExactTokensForETHSupportingFeeOnTransferTokens\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nexport class IUniswapV2Router02__factory {\n  static readonly abi = _abi;\n  static createInterface(): IUniswapV2Router02Interface {\n    return new utils.Interface(_abi) as IUniswapV2Router02Interface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IUniswapV2Router02 {\n    return new Contract(address, _abi, signerOrProvider) as IUniswapV2Router02;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport type { Provider } from \"@ethersproject/providers\";\nimport type {\n  IUniswapV3SwapCallback,\n  IUniswapV3SwapCallbackInterface,\n} from \"../IUniswapV3SwapCallback\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"int256\",\n        name: \"amount0Delta\",\n        type: \"int256\",\n      },\n      {\n        internalType: \"int256\",\n        name: \"amount1Delta\",\n        type: \"int256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"uniswapV3SwapCallback\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nexport class IUniswapV3SwapCallback__factory {\n  static readonly abi = _abi;\n  static createInterface(): IUniswapV3SwapCallbackInterface {\n    return new utils.Interface(_abi) as IUniswapV3SwapCallbackInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IUniswapV3SwapCallback {\n    return new Contract(\n      address,\n      _abi,\n      signerOrProvider\n    ) as IUniswapV3SwapCallback;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport type { Provider } from \"@ethersproject/providers\";\nimport type { IWETH, IWETHInterface } from \"../IWETH\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"deposit\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"withdraw\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nexport class IWETH__factory {\n  static readonly abi = _abi;\n  static createInterface(): IWETHInterface {\n    return new utils.Interface(_abi) as IWETHInterface;\n  }\n  static connect(address: string, signerOrProvider: Signer | Provider): IWETH {\n    return new Contract(address, _abi, signerOrProvider) as IWETH;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport type { Provider } from \"@ethersproject/providers\";\nimport type { IWormhole, IWormholeInterface } from \"../IWormhole\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint64\",\n        name: \"sequence\",\n        type: \"uint64\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint32\",\n        name: \"nonce\",\n        type: \"uint32\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes\",\n        name: \"payload\",\n        type: \"bytes\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint8\",\n        name: \"consistencyLevel\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"LogMessagePublished\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint32\",\n        name: \"nonce\",\n        type: \"uint32\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"payload\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"consistencyLevel\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"publishMessage\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"sequence\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes\",\n        name: \"encodedVM\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"parseAndVerifyVM\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"uint8\",\n            name: \"version\",\n            type: \"uint8\",\n          },\n          {\n            internalType: \"uint32\",\n            name: \"timestamp\",\n            type: \"uint32\",\n          },\n          {\n            internalType: \"uint32\",\n            name: \"nonce\",\n            type: \"uint32\",\n          },\n          {\n            internalType: \"uint16\",\n            name: \"emitterChainId\",\n            type: \"uint16\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"emitterAddress\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint64\",\n            name: \"sequence\",\n            type: \"uint64\",\n          },\n          {\n            internalType: \"uint8\",\n            name: \"consistencyLevel\",\n            type: \"uint8\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"payload\",\n            type: \"bytes\",\n          },\n          {\n            internalType: \"uint32\",\n            name: \"guardianSetIndex\",\n            type: \"uint32\",\n          },\n          {\n            components: [\n              {\n                internalType: \"bytes32\",\n                name: \"r\",\n                type: \"bytes32\",\n              },\n              {\n                internalType: \"bytes32\",\n                name: \"s\",\n                type: \"bytes32\",\n              },\n              {\n                internalType: \"uint8\",\n                name: \"v\",\n                type: \"uint8\",\n              },\n              {\n                internalType: \"uint8\",\n                name: \"guardianIndex\",\n                type: \"uint8\",\n              },\n            ],\n            internalType: \"struct IWormhole.Signature[]\",\n            name: \"signatures\",\n            type: \"tuple[]\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"hash\",\n            type: \"bytes32\",\n          },\n        ],\n        internalType: \"struct IWormhole.VM\",\n        name: \"vm\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"valid\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"string\",\n        name: \"reason\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"uint8\",\n            name: \"version\",\n            type: \"uint8\",\n          },\n          {\n            internalType: \"uint32\",\n            name: \"timestamp\",\n            type: \"uint32\",\n          },\n          {\n            internalType: \"uint32\",\n            name: \"nonce\",\n            type: \"uint32\",\n          },\n          {\n            internalType: \"uint16\",\n            name: \"emitterChainId\",\n            type: \"uint16\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"emitterAddress\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint64\",\n            name: \"sequence\",\n            type: \"uint64\",\n          },\n          {\n            internalType: \"uint8\",\n            name: \"consistencyLevel\",\n            type: \"uint8\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"payload\",\n            type: \"bytes\",\n          },\n          {\n            internalType: \"uint32\",\n            name: \"guardianSetIndex\",\n            type: \"uint32\",\n          },\n          {\n            components: [\n              {\n                internalType: \"bytes32\",\n                name: \"r\",\n                type: \"bytes32\",\n              },\n              {\n                internalType: \"bytes32\",\n                name: \"s\",\n                type: \"bytes32\",\n              },\n              {\n                internalType: \"uint8\",\n                name: \"v\",\n                type: \"uint8\",\n              },\n              {\n                internalType: \"uint8\",\n                name: \"guardianIndex\",\n                type: \"uint8\",\n              },\n            ],\n            internalType: \"struct IWormhole.Signature[]\",\n            name: \"signatures\",\n            type: \"tuple[]\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"hash\",\n            type: \"bytes32\",\n          },\n        ],\n        internalType: \"struct IWormhole.VM\",\n        name: \"vm\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"verifyVM\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"valid\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"string\",\n        name: \"reason\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"hash\",\n        type: \"bytes32\",\n      },\n      {\n        components: [\n          {\n            internalType: \"bytes32\",\n            name: \"r\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"s\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint8\",\n            name: \"v\",\n            type: \"uint8\",\n          },\n          {\n            internalType: \"uint8\",\n            name: \"guardianIndex\",\n            type: \"uint8\",\n          },\n        ],\n        internalType: \"struct IWormhole.Signature[]\",\n        name: \"signatures\",\n        type: \"tuple[]\",\n      },\n      {\n        components: [\n          {\n            internalType: \"address[]\",\n            name: \"keys\",\n            type: \"address[]\",\n          },\n          {\n            internalType: \"uint32\",\n            name: \"expirationTime\",\n            type: \"uint32\",\n          },\n        ],\n        internalType: \"struct IWormhole.GuardianSet\",\n        name: \"guardianSet\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"verifySignatures\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"valid\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"string\",\n        name: \"reason\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes\",\n        name: \"encodedVM\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"parseVM\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"uint8\",\n            name: \"version\",\n            type: \"uint8\",\n          },\n          {\n            internalType: \"uint32\",\n            name: \"timestamp\",\n            type: \"uint32\",\n          },\n          {\n            internalType: \"uint32\",\n            name: \"nonce\",\n            type: \"uint32\",\n          },\n          {\n            internalType: \"uint16\",\n            name: \"emitterChainId\",\n            type: \"uint16\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"emitterAddress\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint64\",\n            name: \"sequence\",\n            type: \"uint64\",\n          },\n          {\n            internalType: \"uint8\",\n            name: \"consistencyLevel\",\n            type: \"uint8\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"payload\",\n            type: \"bytes\",\n          },\n          {\n            internalType: \"uint32\",\n            name: \"guardianSetIndex\",\n            type: \"uint32\",\n          },\n          {\n            components: [\n              {\n                internalType: \"bytes32\",\n                name: \"r\",\n                type: \"bytes32\",\n              },\n              {\n                internalType: \"bytes32\",\n                name: \"s\",\n                type: \"bytes32\",\n              },\n              {\n                internalType: \"uint8\",\n                name: \"v\",\n                type: \"uint8\",\n              },\n              {\n                internalType: \"uint8\",\n                name: \"guardianIndex\",\n                type: \"uint8\",\n              },\n            ],\n            internalType: \"struct IWormhole.Signature[]\",\n            name: \"signatures\",\n            type: \"tuple[]\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"hash\",\n            type: \"bytes32\",\n          },\n        ],\n        internalType: \"struct IWormhole.VM\",\n        name: \"vm\",\n        type: \"tuple\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint32\",\n        name: \"index\",\n        type: \"uint32\",\n      },\n    ],\n    name: \"getGuardianSet\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"address[]\",\n            name: \"keys\",\n            type: \"address[]\",\n          },\n          {\n            internalType: \"uint32\",\n            name: \"expirationTime\",\n            type: \"uint32\",\n          },\n        ],\n        internalType: \"struct IWormhole.GuardianSet\",\n        name: \"\",\n        type: \"tuple\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getCurrentGuardianSetIndex\",\n    outputs: [\n      {\n        internalType: \"uint32\",\n        name: \"\",\n        type: \"uint32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getGuardianSetExpiry\",\n    outputs: [\n      {\n        internalType: \"uint32\",\n        name: \"\",\n        type: \"uint32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"hash\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"governanceActionIsConsumed\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"impl\",\n        type: \"address\",\n      },\n    ],\n    name: \"isInitialized\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"chainId\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"governanceChainId\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"governanceContract\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"messageFee\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"evmChainId\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"emitter\",\n        type: \"address\",\n      },\n    ],\n    name: \"nextSequence\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nexport class IWormhole__factory {\n  static readonly abi = _abi;\n  static createInterface(): IWormholeInterface {\n    return new utils.Interface(_abi) as IWormholeInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IWormhole {\n    return new Contract(address, _abi, signerOrProvider) as IWormhole;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport { Signer, utils, Contract, ContractFactory, Overrides } from \"ethers\";\nimport type { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport type { PromiseOrValue } from \"../common\";\nimport type { Migrations, MigrationsInterface } from \"../Migrations\";\n\nconst _abi = [\n  {\n    inputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    inputs: [],\n    name: \"last_completed_migration\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"owner\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"completed\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setCompleted\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061024a806100606000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063445df0ac146100465780638da5cb5b14610064578063fdacd57614610082575b600080fd5b61004e61009e565b60405161005b919061013f565b60405180910390f35b61006c6100a4565b604051610079919061019b565b60405180910390f35b61009c600480360381019061009791906101e7565b6100c8565b005b60015481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff160361012357806001819055505b50565b6000819050919050565b61013981610126565b82525050565b60006020820190506101546000830184610130565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101858261015a565b9050919050565b6101958161017a565b82525050565b60006020820190506101b0600083018461018c565b92915050565b600080fd5b6101c481610126565b81146101cf57600080fd5b50565b6000813590506101e1816101bb565b92915050565b6000602082840312156101fd576101fc6101b6565b5b600061020b848285016101d2565b9150509291505056fea26469706673582212207e71e445ebb885b05048e3236513077edb530d28b39d628a91846426f7295a8564736f6c634300080d0033\";\n\ntype MigrationsConstructorParams =\n  | [signer?: Signer]\n  | ConstructorParameters<typeof ContractFactory>;\n\nconst isSuperArgs = (\n  xs: MigrationsConstructorParams\n): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;\n\nexport class Migrations__factory extends ContractFactory {\n  constructor(...args: MigrationsConstructorParams) {\n    if (isSuperArgs(args)) {\n      super(...args);\n    } else {\n      super(_abi, _bytecode, args[0]);\n    }\n  }\n\n  override deploy(\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<Migrations> {\n    return super.deploy(overrides || {}) as Promise<Migrations>;\n  }\n  override getDeployTransaction(\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): TransactionRequest {\n    return super.getDeployTransaction(overrides || {});\n  }\n  override attach(address: string): Migrations {\n    return super.attach(address) as Migrations;\n  }\n  override connect(signer: Signer): Migrations__factory {\n    return super.connect(signer) as Migrations__factory;\n  }\n\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): MigrationsInterface {\n    return new utils.Interface(_abi) as MigrationsInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): Migrations {\n    return new Contract(address, _abi, signerOrProvider) as Migrations;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport { Signer, utils, Contract, ContractFactory, Overrides } from \"ethers\";\nimport type { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport type { PromiseOrValue } from \"../common\";\nimport type { SwapHelper, SwapHelperInterface } from \"../SwapHelper\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"bytes\",\n        name: \"encoded\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"decodeSwapInParameters\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"estimatedAmount\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"recipientAddress\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"address[2]\",\n            name: \"path\",\n            type: \"address[2]\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"deadline\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint24\",\n            name: \"poolFee\",\n            type: \"uint24\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"relayerFee\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct SwapHelper.RecvSwapInParameters\",\n        name: \"params\",\n        type: \"tuple\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x608060405234801561001057600080fd5b50610cc4806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063943650e914610030575b600080fd5b61004a600480360381019061004591906106c9565b610060565b60405161005791906108ba565b60405180910390f35b610068610509565b60008061007e82856102f790919063ffffffff16565b905060018261008d9190610904565b915060018160ff16146100d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100cc906109b7565b60405180910390fd5b6100e8828561035e90919063ffffffff16565b8360000181815250506020826100fe9190610904565b915061011382856103c590919063ffffffff16565b8360200181815250506020826101299190610904565b915061013e828561042c90919063ffffffff16565b8360400151600060028110610156576101556109d7565b5b602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060148261019a9190610904565b91506101af828561042c90919063ffffffff16565b83604001516001600281106101c7576101c66109d7565b5b602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060148261020b9190610904565b9150610220828561035e90919063ffffffff16565b8360600181815250506020826102369190610904565b91506001826102459190610904565b915061025a82856104a290919063ffffffff16565b61ffff16836080019062ffffff16908162ffffff16815250506002826102809190610904565b9150610295828561035e90919063ffffffff16565b8360a00181815250506020826102ab9190610904565b9150835182146102f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e790610a52565b60405180910390fd5b5050919050565b60006001826103069190610904565b83511015610349576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034090610abe565b60405180910390fd5b60008260018501015190508091505092915050565b600060208261036d9190610904565b835110156103b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a790610b2a565b60405180910390fd5b60008260208501015190508091505092915050565b60006020826103d49190610904565b83511015610417576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040e90610b96565b60405180910390fd5b60008260208501015190508091505092915050565b600060148261043b9190610904565b8351101561047e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047590610c02565b60405180910390fd5b60006c01000000000000000000000000836020860101510490508091505092915050565b60006002826104b19190610904565b835110156104f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104eb90610c6e565b60405180910390fd5b60008260028501015190508091505092915050565b6040518060c00160405280600081526020016000801916815260200161052d61054d565b815260200160008152602001600062ffffff168152602001600081525090565b6040518060400160405280600290602082028036833780820191505090505090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6105d68261058d565b810181811067ffffffffffffffff821117156105f5576105f461059e565b5b80604052505050565b600061060861056f565b905061061482826105cd565b919050565b600067ffffffffffffffff8211156106345761063361059e565b5b61063d8261058d565b9050602081019050919050565b82818337600083830152505050565b600061066c61066784610619565b6105fe565b90508281526020810184848401111561068857610687610588565b5b61069384828561064a565b509392505050565b600082601f8301126106b0576106af610583565b5b81356106c0848260208601610659565b91505092915050565b6000602082840312156106df576106de610579565b5b600082013567ffffffffffffffff8111156106fd576106fc61057e565b5b6107098482850161069b565b91505092915050565b6000819050919050565b61072581610712565b82525050565b6000819050919050565b61073e8161072b565b82525050565b600060029050919050565b600081905092915050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061078f82610764565b9050919050565b61079f81610784565b82525050565b60006107b18383610796565b60208301905092915050565b6000602082019050919050565b6107d381610744565b6107dd818461074f565b92506107e88261075a565b8060005b8381101561081957815161080087826107a5565b965061080b836107bd565b9250506001810190506107ec565b505050505050565b600062ffffff82169050919050565b61083981610821565b82525050565b60e082016000820151610855600085018261071c565b5060208201516108686020850182610735565b50604082015161087b60408501826107ca565b50606082015161088e608085018261071c565b5060808201516108a160a0850182610830565b5060a08201516108b460c085018261071c565b50505050565b600060e0820190506108cf600083018461083f565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061090f82610712565b915061091a83610712565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561094f5761094e6108d5565b5b828201905092915050565b600082825260208201905092915050565b7f696e76616c6964207061796c6f61640000000000000000000000000000000000600082015250565b60006109a1600f8361095a565b91506109ac8261096b565b602082019050919050565b600060208201905081810360008301526109d081610994565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f696e76616c69642073776170207061796c6f6164000000000000000000000000600082015250565b6000610a3c60148361095a565b9150610a4782610a06565b602082019050919050565b60006020820190508181036000830152610a6b81610a2f565b9050919050565b7f746f55696e74385f6f75744f66426f756e647300000000000000000000000000600082015250565b6000610aa860138361095a565b9150610ab382610a72565b602082019050919050565b60006020820190508181036000830152610ad781610a9b565b9050919050565b7f746f55696e743235365f6f75744f66426f756e64730000000000000000000000600082015250565b6000610b1460158361095a565b9150610b1f82610ade565b602082019050919050565b60006020820190508181036000830152610b4381610b07565b9050919050565b7f746f427974657333325f6f75744f66426f756e64730000000000000000000000600082015250565b6000610b8060158361095a565b9150610b8b82610b4a565b602082019050919050565b60006020820190508181036000830152610baf81610b73565b9050919050565b7f746f416464726573735f6f75744f66426f756e64730000000000000000000000600082015250565b6000610bec60158361095a565b9150610bf782610bb6565b602082019050919050565b60006020820190508181036000830152610c1b81610bdf565b9050919050565b7f746f55696e7431365f6f75744f66426f756e6473000000000000000000000000600082015250565b6000610c5860148361095a565b9150610c6382610c22565b602082019050919050565b60006020820190508181036000830152610c8781610c4b565b905091905056fea2646970667358221220736ac4e73d46385fb30a116a2ce9f037ec93f6d64bf18ae71845a1e0eab5620264736f6c634300080d0033\";\n\ntype SwapHelperConstructorParams =\n  | [signer?: Signer]\n  | ConstructorParameters<typeof ContractFactory>;\n\nconst isSuperArgs = (\n  xs: SwapHelperConstructorParams\n): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;\n\nexport class SwapHelper__factory extends ContractFactory {\n  constructor(...args: SwapHelperConstructorParams) {\n    if (isSuperArgs(args)) {\n      super(...args);\n    } else {\n      super(_abi, _bytecode, args[0]);\n    }\n  }\n\n  override deploy(\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<SwapHelper> {\n    return super.deploy(overrides || {}) as Promise<SwapHelper>;\n  }\n  override getDeployTransaction(\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): TransactionRequest {\n    return super.getDeployTransaction(overrides || {});\n  }\n  override attach(address: string): SwapHelper {\n    return super.attach(address) as SwapHelper;\n  }\n  override connect(signer: Signer): SwapHelper__factory {\n    return super.connect(signer) as SwapHelper__factory;\n  }\n\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): SwapHelperInterface {\n    return new utils.Interface(_abi) as SwapHelperInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): SwapHelper {\n    return new Contract(address, _abi, signerOrProvider) as SwapHelper;\n  }\n}\n","export enum UsdcLocation {\n  In = 1,\n  Out,\n}\n\nexport abstract class RouterCore {\n  abstract computeAndVerifyPoolAddress(): Promise<string>;\n\n  abstract computePoolAddress(): string;\n\n  //abstract computeUnitAmountIn(amount: string): string;\n\n  abstract computeUnitAmountOut(amount: string): string;\n\n  abstract fetchExactInQuote(\n    amountOut: string,\n    slippage: string\n  ): Promise<string>;\n\n  abstract fetchExactOutQuote(\n    amountOut: string,\n    slippage: string\n  ): Promise<string>;\n\n  abstract formatAmountIn(amount: string): string;\n\n  abstract formatAmountOut(amount: string): string;\n\n  abstract getProtocol(): string;\n\n  abstract getTokenInDecimals(): number;\n\n  abstract getTokenOutDecimals(): number;\n\n  abstract getTokenOutAddress(): string;\n}\n\nexport abstract class GenericToken {\n  abstract getAddress(): string;\n\n  abstract getDecimals(): number;\n}\n","import { ethers } from \"ethers\";\n\nimport { GenericToken } from \"./generic\";\n\n// erc20 spec\nimport { abi as Erc20Abi } from \"../abi/erc20.json\";\nimport {\n  TransactionReceipt,\n  TransactionRequest,\n  TransactionResponse,\n} from \"@ethersproject/abstract-provider\";\nimport { APPROVAL_GAS_LIMIT } from \"../utils/consts\";\n\nexport class EvmToken extends GenericToken {\n  token: ethers.Contract;\n  decimals: number;\n\n  async initialize(provider: ethers.providers.Provider, tokenAddress: string) {\n    this.token = await makeErc20Contract(provider, tokenAddress);\n    this.decimals = await this.token.decimals();\n  }\n\n  static async create(\n    provider: ethers.providers.Provider,\n    tokenAddress: string\n  ): Promise<EvmToken> {\n    const o = new EvmToken();\n    await o.initialize(provider, tokenAddress);\n    return o;\n  }\n\n  getAddress(): string {\n    return this.token.address;\n  }\n\n  getDecimals(): number {\n    return this.decimals;\n  }\n\n  getContract(): ethers.Contract {\n    return this.token;\n  }\n\n  async getBalanceOf(signer: ethers.Wallet) {\n    const decimals = this.getDecimals();\n    const balanceBeforeDecimals = await this.token.balanceOf(signer.address);\n    return ethers.utils.formatUnits(balanceBeforeDecimals.toString(), decimals);\n  }\n\n  computeUnitAmount(amount: string): ethers.BigNumber {\n    return ethers.utils.parseUnits(amount, this.getDecimals());\n  }\n\n  formatAmount(unitAmount: ethers.BigNumber): string {\n    return ethers.utils.formatUnits(unitAmount, this.getDecimals());\n  }\n\n  addAmounts(left: string, right: string): string {\n    const sum = ethers.FixedNumber.from(left).addUnsafe(\n      ethers.FixedNumber.from(right)\n    );\n    return sum.round(this.getDecimals()).toString();\n  }\n\n  subtractAmounts(left: string, right: string): string {\n    const sum = ethers.FixedNumber.from(left).subUnsafe(\n      ethers.FixedNumber.from(right)\n    );\n    return sum.round(this.getDecimals()).toString();\n  }\n}\n\nexport async function makeErc20Contract(\n  provider: ethers.providers.Provider,\n  tokenAddress: string\n): Promise<ethers.Contract> {\n  return new ethers.Contract(tokenAddress, Erc20Abi, provider);\n}\n\nexport async function approveContractTokenSpend(\n  provider: ethers.providers.Provider,\n  signer: ethers.Wallet,\n  tokenContract: ethers.Contract,\n  smartContractAddress: string,\n  swapAmount: ethers.BigNumber\n): Promise<TransactionReceipt> {\n  // build transaction for token spending\n  const unsignedTx: TransactionRequest =\n    await tokenContract.populateTransaction.approve(\n      smartContractAddress,\n      swapAmount\n    );\n  const nonce = await provider.getTransactionCount(signer.address, \"latest\");\n\n  const gasPrice = await signer.getGasPrice();\n  const parsedGasPrice = ethers.utils.hexlify(parseInt(gasPrice.toString()));\n\n  unsignedTx.nonce = nonce;\n  unsignedTx.gasLimit = ethers.BigNumber.from(APPROVAL_GAS_LIMIT);\n  unsignedTx.gasPrice = ethers.BigNumber.from(parsedGasPrice);\n\n  // sign and send transaction\n  const tx: TransactionResponse = await signer.sendTransaction(unsignedTx);\n  return tx.wait();\n}\n","//@ts-nocheck\nimport { ethers } from \"ethers\";\nimport { CurrencyAmount, Token } from \"@uniswap/sdk-core\";\n\nimport { EvmToken } from \"./evm\";\nimport { RouterCore, UsdcLocation } from \"./generic\";\nimport { TokenInfo } from \"../utils/consts\";\n\nexport function computeTradeDeadline(deadline: string): ethers.BigNumber {\n  return ethers.BigNumber.from(Math.floor(Date.now() / 1000)).add(deadline);\n}\n\nexport class UniEvmToken {\n  erc20: EvmToken;\n  uniToken: Token;\n\n  constructor(chainId: number, erc20: EvmToken) {\n    this.erc20 = erc20;\n\n    const address = this.getAddress();\n    const decimals = this.getDecimals();\n\n    this.uniToken = new Token(chainId, address, decimals);\n  }\n\n  getUniToken(): Token {\n    return this.uniToken;\n  }\n\n  getEvmToken(): EvmToken {\n    return this.erc20;\n  }\n\n  getDecimals(): number {\n    return this.erc20.getDecimals();\n  }\n\n  getContract(): ethers.Contract {\n    return this.erc20.getContract();\n  }\n\n  getAddress(): string {\n    return this.erc20.getAddress();\n  }\n\n  async getBalanceOf(signer: ethers.Wallet) {\n    return this.erc20.getBalanceOf(signer);\n  }\n\n  computeUnitAmount(amount: string): ethers.BigNumber {\n    return this.erc20.computeUnitAmount(amount);\n  }\n\n  formatAmount(unitAmount: ethers.BigNumber): string {\n    return this.erc20.formatAmount(unitAmount);\n  }\n\n  computeCurrencyAmount(amount: string): CurrencyAmount<Token> {\n    const unitAmount = this.computeUnitAmount(amount);\n    return CurrencyAmount.fromRawAmount(\n      this.getUniToken(),\n      unitAmount.toString()\n    );\n  }\n\n  addAmounts(left: string, right: string): string {\n    return this.erc20.addAmounts(left, right);\n  }\n\n  subtractAmounts(left: string, right: string): string {\n    return this.erc20.subtractAmounts(left, right);\n  }\n}\n\nexport async function makeUniEvmToken(\n  provider: ethers.providers.Provider,\n  chainId: number,\n  tokenAddress: string\n): Promise<UniEvmToken> {\n  const erc20 = await EvmToken.create(provider, tokenAddress);\n  return new UniEvmToken(chainId, erc20);\n}\n\nfunction stringToBigNumber(value: string): ethers.BigNumber {\n  return ethers.BigNumber.from(value);\n}\n\nexport interface ExactInParameters {\n  protocol: string;\n  amountIn: ethers.BigNumber;\n  minAmountOut: ethers.BigNumber;\n  deadline: ethers.BigNumber;\n  poolFee: string;\n  path: [string, string];\n}\n\nexport interface ExactOutParameters {\n  protocol: string;\n  amountOut: ethers.BigNumber;\n  maxAmountIn: ethers.BigNumber;\n  deadline: ethers.BigNumber;\n  poolFee: string;\n  path: [string, string];\n}\n\nexport function makeExactInParameters(\n  router: UniswapRouterCore,\n  amountIn: string,\n  minAmountOut: string\n): ExactInParameters {\n  const params: ExactInParameters = {\n    protocol: router.getProtocol(),\n    amountIn: router.tokenIn.computeUnitAmount(amountIn),\n    minAmountOut: router.tokenOut.computeUnitAmount(minAmountOut),\n    poolFee: router.getPoolFee(),\n    deadline: router.getTradeDeadline(),\n    path: [router.tokenIn.getAddress(), router.tokenOut.getAddress()],\n  };\n  return params;\n}\n\nexport function makeExactOutParameters(\n  router: UniswapRouterCore,\n  amountOut: string,\n  maxAmountIn: string\n): ExactOutParameters {\n  const params: ExactOutParameters = {\n    protocol: router.getProtocol(),\n    amountOut: router.tokenOut.computeUnitAmount(amountOut),\n    maxAmountIn: router.tokenIn.computeUnitAmount(maxAmountIn),\n    poolFee: router.getPoolFee(),\n    deadline: router.getTradeDeadline(),\n    path: [router.tokenIn.getAddress(), router.tokenOut.getAddress()],\n  };\n  return params;\n}\n\nexport abstract class UniswapRouterCore extends RouterCore {\n  provider: ethers.providers.Provider;\n  network: ethers.providers.Network;\n\n  // wormhole\n  chainId: number;\n\n  // tokens\n  tokenIn: UniEvmToken;\n  tokenOut: UniEvmToken;\n\n  // params\n  deadline: string = \"\";\n\n  constructor(provider: ethers.providers.Provider) {\n    super();\n    this.provider = provider;\n  }\n\n  public getProvider(): ethers.providers.Provider {\n    return this.provider;\n  }\n\n  public async initializeTokens(\n    tokenInfo: TokenInfo,\n    usdcLocation: UsdcLocation\n  ): Promise<void> {\n    this.network = await this.provider.getNetwork();\n\n    const network = this.network;\n\n    if (usdcLocation === UsdcLocation.Out) {\n      [this.tokenIn, this.tokenOut] = await Promise.all([\n        makeUniEvmToken(this.provider, network.chainId, tokenInfo.address),\n        makeUniEvmToken(\n          this.provider,\n          network.chainId,\n          tokenInfo.usdcPairedAddress\n        ),\n      ]);\n    } else {\n      [this.tokenIn, this.tokenOut] = await Promise.all([\n        makeUniEvmToken(\n          this.provider,\n          network.chainId,\n          tokenInfo.usdcPairedAddress\n        ),\n        makeUniEvmToken(this.provider, network.chainId, tokenInfo.address),\n      ]);\n    }\n    return;\n  }\n\n  public getPoolFee(): string {\n    return \"\";\n  }\n\n  public setDeadline(deadline: string): void {\n    this.deadline = deadline;\n  }\n\n  public getTradeDeadline(): ethers.BigNumber {\n    return computeTradeDeadline(this.deadline);\n  }\n\n  /*\n  public computeUnitAmountIn(amount: string): string {\n    return this.tokenIn.computeUnitAmount(amount).toString();\n  }\n  */\n\n  public computeUnitAmountOut(amount: string): string {\n    return this.tokenOut.computeUnitAmount(amount).toString();\n  }\n\n  public formatAmountIn(amount: string): string {\n    return this.tokenIn.formatAmount(stringToBigNumber(amount));\n  }\n\n  public formatAmountOut(amount: string): string {\n    return this.tokenOut.formatAmount(stringToBigNumber(amount));\n  }\n\n  public getTokenInDecimals(): number {\n    return this.tokenIn.getDecimals();\n  }\n\n  public getTokenOutDecimals(): number {\n    return this.tokenOut.getDecimals();\n  }\n\n  public getTokenOutAddress(): string {\n    return this.tokenOut.getAddress();\n  }\n\n  abstract getProtocol(): string;\n}\n","import { ethers } from \"ethers\";\nimport JSBI from \"jsbi\";\nimport { CurrencyAmount, Token, TradeType } from \"@uniswap/sdk-core\";\nimport { abi as IUniswapV3PoolABI } from \"@uniswap/v3-core/artifacts/contracts/interfaces/IUniswapV3Pool.sol/IUniswapV3Pool.json\";\nimport {\n  computePoolAddress,\n  FeeAmount,\n  nearestUsableTick,\n  Pool,\n  Route,\n  TickMath,\n  TICK_SPACINGS,\n  Trade,\n} from \"@uniswap/v3-sdk\";\n\nimport { UniswapRouterCore } from \"./uniswap-core\";\nimport { ETH_TOKEN_INFO } from \"../utils/consts\";\nimport { UsdcLocation } from \"./generic\";\n\nexport const PROTOCOL = \"UniswapV3\";\n\nconst UNISWAP_V3_FACTORY_ADDRESS = \"0x1F98431c8aD98523631AE4a59f267346ea31F984\";\n\nexport class UniswapV3Router extends UniswapRouterCore {\n  poolContract: ethers.Contract;\n  pool: Pool;\n  poolFee: FeeAmount;\n\n  constructor(provider: ethers.providers.Provider) {\n    super(provider);\n\n    // set fee amount for our example\n    this.poolFee = FeeAmount.MEDIUM;\n  }\n\n  async initialize(usdcLocation: UsdcLocation): Promise<void> {\n    await this.initializeTokens(ETH_TOKEN_INFO, usdcLocation);\n    return;\n  }\n\n  getPoolFee(): string {\n    return this.poolFee.toString();\n  }\n\n  computePoolAddress(): string {\n    return computePoolAddress({\n      factoryAddress: UNISWAP_V3_FACTORY_ADDRESS,\n      fee: this.poolFee,\n      tokenA: this.tokenIn.getUniToken(),\n      tokenB: this.tokenOut.getUniToken(),\n    });\n  }\n\n  async computeAndVerifyPoolAddress(): Promise<string> {\n    const pairAddress = this.computePoolAddress();\n\n    // verify by attempting to call factory()\n    const poolContract = new ethers.Contract(\n      pairAddress,\n      IUniswapV3PoolABI,\n      this.provider\n    );\n    await poolContract.factory();\n\n    return pairAddress;\n  }\n\n  async createPool(): Promise<Pool> {\n    const poolAddress = this.computePoolAddress();\n\n    const poolContract = new ethers.Contract(\n      poolAddress,\n      IUniswapV3PoolABI,\n      this.provider\n    );\n    this.poolContract = poolContract;\n\n    const [liquidity, slot] = await Promise.all([\n      poolContract.liquidity(),\n      poolContract.slot0(),\n    ]);\n\n    // grab necessary data from slot\n    const sqrtPriceX96 = slot[0];\n    const tick = slot[1];\n\n    // create JSBI version of liquidity numbers\n    const bigLiq = JSBI.BigInt(liquidity);\n    const negBigLiq = JSBI.multiply(bigLiq, JSBI.BigInt(-1));\n\n    const tickConstructorArgs = [\n      {\n        index: nearestUsableTick(\n          TickMath.MIN_TICK,\n          TICK_SPACINGS[this.poolFee]\n        ),\n        liquidityNet: bigLiq,\n        liquidityGross: bigLiq,\n      },\n      {\n        index: nearestUsableTick(\n          TickMath.MAX_TICK,\n          TICK_SPACINGS[this.poolFee]\n        ),\n        liquidityNet: negBigLiq,\n        liquidityGross: bigLiq,\n      },\n    ];\n\n    return new Pool(\n      this.tokenIn.getUniToken(),\n      this.tokenOut.getUniToken(),\n      this.poolFee,\n      sqrtPriceX96.toString(), //note the description discrepancy - sqrtPriceX96 and sqrtRatioX96 are interchangable values\n      liquidity,\n      tick,\n      tickConstructorArgs\n    );\n  }\n\n  async computeTradeExactIn(\n    amount: string\n  ): Promise<Trade<Token, Token, TradeType.EXACT_INPUT>> {\n    // create pool\n    const pool = await this.createPool();\n\n    // let's get that quote\n    const tokenIn = this.tokenIn;\n    const tokenOut = this.tokenOut;\n\n    const amountIn = tokenIn.computeUnitAmount(amount);\n\n    const route = new Route(\n      [pool],\n      tokenIn.getUniToken(),\n      tokenOut.getUniToken()\n    );\n    return Trade.fromRoute(\n      route,\n      CurrencyAmount.fromRawAmount(tokenIn.getUniToken(), amountIn.toString()),\n      TradeType.EXACT_INPUT\n    );\n  }\n\n  async computeTradeExactOut(\n    amount: string\n  ): Promise<Trade<Token, Token, TradeType.EXACT_OUTPUT>> {\n    // create pool\n    const pool = await this.createPool();\n\n    // let's get that quote\n    const tokenIn = this.tokenIn;\n    const tokenOut = this.tokenOut;\n\n    const amountOut = tokenOut.computeUnitAmount(amount);\n\n    const route = new Route(\n      [pool],\n      tokenIn.getUniToken(),\n      tokenOut.getUniToken()\n    );\n    return Trade.fromRoute(\n      route,\n      CurrencyAmount.fromRawAmount(\n        tokenOut.getUniToken(),\n        amountOut.toString()\n      ),\n      TradeType.EXACT_OUTPUT\n    );\n  }\n\n  async fetchExactInQuote(amountIn: string, slippage: string): Promise<string> {\n    // get the quote\n    const trade = await this.computeTradeExactIn(amountIn);\n\n    const tokenOut = this.tokenOut;\n    const decimals = tokenOut.getDecimals();\n\n    // calculate output amount with slippage\n    const minAmountOut = ethers.FixedNumber.from(\n      trade.outputAmount.toSignificant(decimals)\n    );\n\n    const slippageMultiplier = ethers.FixedNumber.from(\"1\").subUnsafe(\n      ethers.FixedNumber.from(slippage)\n    );\n    const minAmountOutWithSlippage = minAmountOut\n      .mulUnsafe(slippageMultiplier)\n      .round(decimals);\n\n    /*\n    return tokenOut\n      .computeUnitAmount(minAmountOutWithSlippage.toString())\n      .toString();\n      */\n    return minAmountOutWithSlippage.toString();\n  }\n\n  async fetchExactOutQuote(\n    amountOut: string,\n    slippage: string\n  ): Promise<string> {\n    // get the quote\n    const trade = await this.computeTradeExactOut(amountOut);\n\n    const tokenIn = this.tokenIn;\n    const decimals = tokenIn.getDecimals();\n\n    // calculate output amount with slippage\n    const maxAmountIn = ethers.FixedNumber.from(\n      trade.inputAmount.toSignificant(decimals)\n    );\n\n    const slippageDivisor = ethers.FixedNumber.from(\"1\").subUnsafe(\n      ethers.FixedNumber.from(slippage)\n    );\n    const maxAmountInWithSlippage = maxAmountIn\n      .divUnsafe(slippageDivisor)\n      .round(decimals);\n\n    /*\n    return tokenIn\n      .computeUnitAmount(maxAmountInWithSlippage.toString())\n      .toString();\n      */\n    return maxAmountInWithSlippage.toString();\n  }\n\n  getProtocol(): string {\n    return PROTOCOL;\n  }\n}\n","import { ethers } from \"ethers\";\nimport { CurrencyAmount, TradeType } from \"@uniswap/sdk-core\";\nimport { abi as IUniswapV2PairABI } from \"@uniswap/v2-core/build/UniswapV2Pair.json\";\nimport { computePairAddress, Pair, Route, Trade } from \"@uniswap/v2-sdk\";\n\nimport { UniswapRouterCore } from \"./uniswap-core\";\n\nexport const PROTOCOL = \"UniswapV2\";\n\n// uniswap v3 (ethereum)\n//export const UNISWAP_V3_FACTORY_ADDRESS = '0x1F98431c8aD98523631AE4a59f267346ea31F984';\n//export const UNISWAP_V3_ROUTER_ADDRESS = '0xE592427A0AEce92De3Edee1F18E0157C05861564';\n\n// quickswap (polygon)\nexport const QUICKSWAP_V2_ROUTER_ADDRESS =\n  \"0xa5E0829CaCEd8fFDD4De3c43696c57F7D7A678ff\";\n\nexport class UniswapV2Router extends UniswapRouterCore {\n  factoryAddress: string;\n  pairContract: ethers.Contract;\n  pair: Pair;\n\n  setFactoryAddress(factoryAddress: string) {\n    this.factoryAddress = factoryAddress;\n    return;\n  }\n\n  computePoolAddress(): string {\n    if (this.factoryAddress === undefined) {\n      throw Error(\"factoryAddress is undefined. use setFactoryAddress\");\n    }\n\n    return computePairAddress({\n      factoryAddress: this.factoryAddress,\n      tokenA: this.tokenIn.getUniToken(),\n      tokenB: this.tokenOut.getUniToken(),\n    });\n  }\n\n  async computeAndVerifyPoolAddress(): Promise<string> {\n    const pairAddress = this.computePoolAddress();\n\n    // verify by attempting to call factory()\n    const poolContract = new ethers.Contract(\n      pairAddress,\n      IUniswapV2PairABI,\n      this.provider\n    );\n    await poolContract.factory();\n\n    return pairAddress;\n  }\n\n  async createPool(): Promise<Pair> {\n    const pairAddress = this.computePoolAddress();\n\n    const pairContract = new ethers.Contract(\n      pairAddress,\n      IUniswapV2PairABI,\n      this.provider\n    );\n\n    const [token0, reserves] = await Promise.all([\n      pairContract.token0(),\n      pairContract.getReserves(),\n    ]);\n\n    const reserve0 = reserves._reserve0.toString();\n    const reserve1 = reserves._reserve1.toString();\n\n    const tokenIn = this.tokenIn;\n    const tokenOut = this.tokenOut;\n\n    if (token0.toLowerCase() === tokenIn.getAddress().toLowerCase()) {\n      return new Pair(\n        CurrencyAmount.fromRawAmount(tokenIn.getUniToken(), reserve0),\n        CurrencyAmount.fromRawAmount(tokenOut.getUniToken(), reserve1)\n      );\n    }\n\n    return new Pair(\n      CurrencyAmount.fromRawAmount(tokenOut.getUniToken(), reserve0),\n      CurrencyAmount.fromRawAmount(tokenIn.getUniToken(), reserve1)\n    );\n  }\n\n  async fetchExactInQuote(amountIn: string, slippage: string): Promise<string> {\n    // create pool\n    const pair = await this.createPool();\n\n    // let's get that quote\n    const tokenIn = this.tokenIn;\n    const tokenOut = this.tokenOut;\n\n    const route = new Route(\n      [pair],\n      tokenIn.getUniToken(),\n      tokenOut.getUniToken()\n    );\n    const currencyAmountIn = tokenIn.computeCurrencyAmount(amountIn);\n\n    const quote = new Trade(route, currencyAmountIn, TradeType.EXACT_INPUT);\n\n    const decimals = tokenOut.getDecimals();\n    const minAmountOut = ethers.FixedNumber.from(\n      quote.outputAmount.toSignificant(decimals)\n    );\n\n    // calculate output amount with slippage\n    const slippageMultiplier = ethers.FixedNumber.from(\"1\").subUnsafe(\n      ethers.FixedNumber.from(slippage)\n    );\n    const minAmountOutWithSlippage = minAmountOut\n      .mulUnsafe(slippageMultiplier)\n      .round(decimals);\n\n    /*\n    return tokenOut\n      .computeUnitAmount(minAmountOutWithSlippage.toString())\n      .toString();\n      */\n    return minAmountOutWithSlippage.toString();\n  }\n\n  async fetchExactOutQuote(\n    amountOut: string,\n    slippage: string\n  ): Promise<string> {\n    // create pool\n    const pair = await this.createPool();\n\n    // let's get that quote\n    const tokenIn = this.tokenIn;\n    const tokenOut = this.tokenOut;\n\n    const route = new Route(\n      [pair],\n      tokenIn.getUniToken(),\n      tokenOut.getUniToken()\n    );\n    const currencyAmountOut = tokenOut.computeCurrencyAmount(amountOut);\n\n    const quote = new Trade(route, currencyAmountOut, TradeType.EXACT_OUTPUT);\n\n    const decimals = tokenIn.getDecimals();\n    const maxAmountIn = ethers.FixedNumber.from(\n      quote.inputAmount.toSignificant(decimals)\n    );\n\n    const slippageDivisor = ethers.FixedNumber.from(\"1\").subUnsafe(\n      ethers.FixedNumber.from(slippage)\n    );\n    const maxAmountInWithSlippage = maxAmountIn\n      .divUnsafe(slippageDivisor)\n      .round(decimals);\n\n    /*\n    return tokenIn\n      .computeUnitAmount(maxAmountInWithSlippage.toString())\n      .toString();\n      */\n    return maxAmountInWithSlippage.toString();\n  }\n\n  getProtocol(): string {\n    return PROTOCOL;\n  }\n}\n","import { ethers } from \"ethers\";\n\nimport { AVAX_TOKEN_INFO } from \"../utils/consts\";\nimport { UsdcLocation } from \"./generic\";\nimport { UniswapV2Router } from \"./uniswap-v2\";\n\nexport { PROTOCOL } from \"./uniswap-v2\";\n\nconst HURRICANESWAP_FACTORY_ADDRESS = \"\";\n\nexport class HurricaneswapRouter extends UniswapV2Router {\n  constructor(provider: ethers.providers.Provider) {\n    super(provider);\n    super.setFactoryAddress(HURRICANESWAP_FACTORY_ADDRESS);\n  }\n\n  async initialize(usdcLocation: UsdcLocation): Promise<void> {\n    await super.initializeTokens(AVAX_TOKEN_INFO, usdcLocation);\n    return;\n  }\n\n  computePoolAddress(): string {\n    // cannot find factory address on testnet\n    return \"0x808FF1000c3A70A8D55725C44FffD6b7BfeDD06A\";\n  }\n}\n","import { ethers } from \"ethers\";\n\nimport { UniswapV3Router as EthRouter } from \"./uniswap-v3\";\nimport { HurricaneswapRouter as AvaxRouter } from \"./hurricaneswap\";\nimport { ETH_TOKEN_INFO, AVAX_TOKEN_INFO } from \"../utils/consts\";\nimport { addFixedAmounts, subtractFixedAmounts } from \"../utils/math\";\nimport { UsdcLocation } from \"./generic\";\nimport {\n  ExactInParameters,\n  ExactOutParameters,\n  makeExactInParameters,\n  makeExactOutParameters,\n} from \"./uniswap-core\";\nimport { ChainId, CHAIN_ID_ETH, CHAIN_ID_AVAX } from \"@certusone/wormhole-sdk\";\n\nexport { PROTOCOL as PROTOCOL_UNISWAP_V2 } from \"./uniswap-v2\";\nexport { PROTOCOL as PROTOCOL_UNISWAP_V3 } from \"./uniswap-v3\";\n\nexport enum QuoteType {\n  ExactIn = 1,\n  ExactOut,\n}\n\nexport function makeEvmProviderFromAddress(tokenAddress: string) {\n  switch (tokenAddress) {\n    case ETH_TOKEN_INFO.address: {\n      const url = process.env.REACT_APP_GOERLI_PROVIDER;\n      if (!url) {\n        throw new Error(\"Could not find REACT_APP_GOERLI_PROVIDER\");\n      }\n      return new ethers.providers.StaticJsonRpcProvider(url);\n    }\n    case AVAX_TOKEN_INFO.address: {\n      const url = process.env.REACT_APP_FUJI_PROVIDER;\n      if (!url) {\n        throw new Error(\"Could not find REACT_APP_FUJI_PROVIDER\");\n      }\n      return new ethers.providers.StaticJsonRpcProvider(url);\n    }\n    default: {\n      throw Error(\"unrecognized evm token address\");\n    }\n  }\n}\n\nexport function getChainIdFromAddress(tokenAddress: string) {\n  switch (tokenAddress) {\n    case ETH_TOKEN_INFO.address: {\n      return CHAIN_ID_ETH;\n    }\n    case AVAX_TOKEN_INFO.address: {\n      return CHAIN_ID_AVAX;\n    }\n    default: {\n      throw Error(\"unrecognized evm token address\");\n    }\n  }\n}\n\nasync function makeRouter(tokenAddress: string, loc: UsdcLocation) {\n  switch (tokenAddress) {\n    case ETH_TOKEN_INFO.address: {\n      const provider = makeEvmProviderFromAddress(tokenAddress);\n      const router = new EthRouter(provider);\n      await router.initialize(loc);\n      return router;\n    }\n    case AVAX_TOKEN_INFO.address: {\n      const provider = makeEvmProviderFromAddress(tokenAddress);\n      const router = new AvaxRouter(provider);\n      await router.initialize(loc);\n      return router;\n    }\n    default: {\n      throw Error(\"unrecognized chain id\");\n    }\n  }\n}\n\nfunction splitSlippageInHalf(totalSlippage: string): string {\n  const divisor = ethers.FixedNumber.from(\"2\");\n  return ethers.FixedNumber.from(totalSlippage)\n    .divUnsafe(divisor)\n    .round(4)\n    .toString();\n}\n\nexport interface RelayerFee {\n  amount: string;\n  tokenAddress: string;\n}\n\nexport interface ExactInCrossParameters {\n  amountIn: string;\n  usdcAmountIn: string;\n  minAmountOut: string;\n  src: ExactInParameters | undefined;\n  dst: ExactInParameters | undefined;\n  relayerFee: RelayerFee;\n}\n\nexport interface ExactOutCrossParameters {\n  amountOut: string;\n  usdcAmountIn: string;\n  maxAmountIn: string;\n  src: ExactOutParameters | undefined;\n  dst: ExactOutParameters | undefined;\n  relayerFee: RelayerFee;\n}\n\nexport class UniswapToUniswapQuoter {\n  // tokens\n  tokenInAddress: string;\n  tokenOutAddress: string;\n\n  // routers\n  srcRouter: EthRouter | AvaxRouter;\n  dstRouter: EthRouter | AvaxRouter;\n\n  async initialize(tokenInAddress: string, tokenOutAddress: string) {\n    if (tokenInAddress !== this.tokenInAddress) {\n      this.tokenInAddress = tokenInAddress;\n      this.srcRouter = await makeRouter(tokenInAddress, UsdcLocation.Out);\n    }\n\n    if (tokenOutAddress !== this.tokenOutAddress) {\n      this.tokenOutAddress = tokenOutAddress;\n      this.dstRouter = await makeRouter(tokenOutAddress, UsdcLocation.In);\n    }\n  }\n\n  async computeAndVerifySrcPoolAddress(): Promise<string> {\n    return this.srcRouter.computeAndVerifyPoolAddress();\n  }\n\n  async computeAndVerifyDstPoolAddress(): Promise<string> {\n    return this.dstRouter.computeAndVerifyPoolAddress();\n  }\n\n  computeSwapSlippage(slippage: string): string {\n    return splitSlippageInHalf(slippage);\n  }\n\n  getRelayerFee(amount: string): RelayerFee {\n    const relayerFee: RelayerFee = {\n      amount: this.srcRouter.computeUnitAmountOut(amount),\n      tokenAddress: this.srcRouter.getTokenOutAddress(),\n    };\n    return relayerFee;\n  }\n\n  makeSrcExactInParameters(\n    amountIn: string,\n    minAmountOut: string\n  ): ExactInParameters | undefined {\n    // @ts-ignore\n    return makeExactInParameters(this.srcRouter, amountIn, minAmountOut);\n  }\n\n  makeDstExactInParameters(\n    amountIn: string,\n    minAmountOut: string\n  ): ExactInParameters | undefined {\n    // @ts-ignore\n    return makeExactInParameters(this.dstRouter, amountIn, minAmountOut);\n  }\n\n  async computeExactInParameters(\n    amountIn: string,\n    slippage: string,\n    relayerFeeUsdc: string\n  ): Promise<ExactInCrossParameters> {\n    const singleSlippage = this.computeSwapSlippage(slippage);\n\n    // src quote\n    const srcRouter = this.srcRouter;\n    const srcMinAmountOut = await srcRouter.fetchExactInQuote(\n      amountIn,\n      singleSlippage\n    );\n\n    // dst quote\n    const dstRouter = this.dstRouter;\n    const dstAmountIn = srcMinAmountOut; //srcRouter.formatAmountOut(srcMinAmountOut);\n    if (Number(dstAmountIn) < Number(relayerFeeUsdc)) {\n      throw Error(\n        `srcAmountOut <= relayerFeeUsdc. ${dstAmountIn} vs ${relayerFeeUsdc}`\n      );\n    }\n\n    const dstAmountInAfterFee = subtractFixedAmounts(\n      dstAmountIn,\n      relayerFeeUsdc,\n      dstRouter.getTokenInDecimals()\n    );\n\n    const dstMinAmountOut = await dstRouter.fetchExactInQuote(\n      dstAmountInAfterFee,\n      singleSlippage\n    );\n\n    // organize parameters\n    const params: ExactInCrossParameters = {\n      amountIn: amountIn,\n      usdcAmountIn: dstAmountInAfterFee,\n      minAmountOut: dstMinAmountOut,\n      src: this.makeSrcExactInParameters(amountIn, srcMinAmountOut),\n      dst: this.makeDstExactInParameters(dstAmountInAfterFee, dstMinAmountOut),\n      relayerFee: this.getRelayerFee(relayerFeeUsdc),\n    };\n    return params;\n  }\n\n  makeSrcExactOutParameters(\n    amountOut: string,\n    maxAmountIn: string\n  ): ExactOutParameters | undefined {\n    // @ts-ignore\n    return makeExactOutParameters(this.srcRouter, amountOut, maxAmountIn);\n  }\n\n  makeDstExactOutParameters(\n    amountOut: string,\n    maxAmountIn: string\n  ): ExactOutParameters | undefined {\n    // @ts-ignore\n    return makeExactOutParameters(this.dstRouter, amountOut, maxAmountIn);\n  }\n\n  async computeExactOutParameters(\n    amountOut: string,\n    slippage: string,\n    relayerFeeUsdc: string\n  ): Promise<ExactOutCrossParameters> {\n    const singleSlippage = splitSlippageInHalf(slippage);\n\n    // dst quote first\n    const dstRouter = this.dstRouter;\n    const dstMaxAmountIn = await dstRouter.fetchExactOutQuote(\n      amountOut,\n      singleSlippage\n    );\n\n    // src quote\n    const srcRouter = this.srcRouter;\n    const srcAmountOut = dstMaxAmountIn;\n    if (Number(srcAmountOut) < Number(relayerFeeUsdc)) {\n      throw Error(\n        `dstAmountIn <= relayerFeeUsdc. ${srcAmountOut} vs ${relayerFeeUsdc}`\n      );\n    }\n\n    const srcAmountOutBeforeFee = addFixedAmounts(\n      srcAmountOut,\n      relayerFeeUsdc,\n      srcRouter.getTokenOutDecimals()\n    );\n\n    const srcMaxAmountIn = await srcRouter.fetchExactOutQuote(\n      srcAmountOutBeforeFee,\n      singleSlippage\n    );\n\n    // organize parameters\n    const params: ExactOutCrossParameters = {\n      amountOut: amountOut,\n      usdcAmountIn: dstMaxAmountIn,\n      maxAmountIn: srcMaxAmountIn,\n      src: this.makeSrcExactOutParameters(\n        srcAmountOutBeforeFee,\n        srcMaxAmountIn\n      ),\n      dst: this.makeDstExactOutParameters(amountOut, dstMaxAmountIn),\n      relayerFee: this.getRelayerFee(relayerFeeUsdc),\n    };\n    return params;\n  }\n\n  setDeadlines(deadline: string): void {\n    // @ts-ignore\n    this.srcRouter.setDeadline(deadline);\n    // @ts-ignore\n    this.dstRouter.setDeadline(deadline);\n  }\n\n  getSrcEvmProvider(): ethers.providers.Provider | undefined {\n    // @ts-ignore\n    return this.srcRouter.getProvider();\n  }\n\n  getDstEvmProvider(): ethers.providers.Provider | undefined {\n    // @ts-ignore\n    return this.dstRouter.getProvider();\n  }\n\n  getSrcChainId(): ChainId {\n    return getChainIdFromAddress(this.tokenInAddress);\n  }\n\n  getDstChainId(): ChainId {\n    return getChainIdFromAddress(this.tokenOutAddress);\n  }\n}\n","import { FixedNumber } from \"ethers\";\n\nexport function addFixedAmounts(\n  left: string,\n  right: string,\n  decimals: number\n): string {\n  const sum = FixedNumber.from(left).addUnsafe(FixedNumber.from(right));\n  return sum.round(decimals).toString();\n}\n\nexport function subtractFixedAmounts(\n  left: string,\n  right: string,\n  decimals: number\n): string {\n  const diff = FixedNumber.from(left).subUnsafe(FixedNumber.from(right));\n  return diff.round(decimals).toString();\n}\n","import { ethers } from \"ethers\";\nimport { TransactionReceipt } from \"@ethersproject/abstract-provider\";\n\nimport {\n  EVM_ETH_NETWORK_CHAIN_ID,\n  EVM_POLYGON_NETWORK_CHAIN_ID,\n  EVM_AVAX_NETWORK_CHAIN_ID,\n  //EVM_BSC_NETWORK_CHAIN_ID,\n} from \"../utils/consts\";\nimport { CrossChainSwapV2, CrossChainSwapV3 } from \"../ethers-contracts\";\n\nexport const CROSSCHAINSWAP_GAS_PARAMETERS_EIP1559 = {\n  gasLimit: \"694200\",\n  //maxFeePerGas: \"250000000000\",\n  maxFeePerGas: \"100420690000\",\n  maxPriorityFeePerGas: \"1690000000\",\n};\n\nexport const CROSSCHAINSWAP_GAS_PARAMETERS_EVM = {\n  gasLimit: \"694200\",\n  //gasPrice: \"250000000000\",\n  gasPrice: \"20420690000\",\n};\n\nexport const EVM_EIP1559_CHAIN_IDS = [\n  EVM_ETH_NETWORK_CHAIN_ID,\n  EVM_POLYGON_NETWORK_CHAIN_ID,\n  EVM_AVAX_NETWORK_CHAIN_ID,\n];\n\nexport async function getEvmGasParametersForContract(\n  contract: ethers.Contract\n): Promise<any> {\n  const chainId = await getChainIdFromContract(contract);\n\n  if (EVM_EIP1559_CHAIN_IDS.indexOf(chainId) >= 0) {\n    return CROSSCHAINSWAP_GAS_PARAMETERS_EIP1559;\n  }\n\n  return CROSSCHAINSWAP_GAS_PARAMETERS_EVM;\n}\n\nasync function getChainIdFromContract(\n  contract: ethers.Contract\n): Promise<number> {\n  const network = await contract.provider.getNetwork();\n  return network.chainId;\n}\n\nexport interface RedeemParametersStruct {\n  encodedWormholeMessage: Uint8Array;\n  circleBridgeMessage: Uint8Array;\n  circleAttestation: Uint8Array;\n}\n\n// exact in\n//\nexport async function evmSwapExactInFromVaaNative(\n  swapContractWithSigner: CrossChainSwapV2 | CrossChainSwapV3,\n  encodedWormholeMessage: Uint8Array,\n  circleBridgeMessage: Uint8Array,\n  circleAttestation: Uint8Array\n): Promise<TransactionReceipt> {\n  const gasParams = await getEvmGasParametersForContract(\n    swapContractWithSigner\n  );\n\n  const tx = await swapContractWithSigner.recvAndSwapExactNativeIn(\n    { encodedWormholeMessage, circleBridgeMessage, circleAttestation },\n    gasParams\n  );\n  return tx.wait();\n}\n","import {\n  ChainId,\n  CHAIN_ID_ETH,\n  CHAIN_ID_POLYGON,\n  CHAIN_ID_AVAX,\n  CHAIN_ID_BSC,\n} from \"@certusone/wormhole-sdk\";\n\nexport const EVM_POLYGON_NETWORK_CHAIN_ID = 80001;\nexport const EVM_ETH_NETWORK_CHAIN_ID = 5;\nexport const EVM_AVAX_NETWORK_CHAIN_ID = 43113;\nexport const EVM_BSC_NETWORK_CHAIN_ID = 97;\n\nexport interface TokenInfo {\n  name: string;\n  address: string;\n  chainId: ChainId;\n  evmChainId: number | undefined;\n  maxAmount: number;\n  usdcPairedAddress: string | undefined;\n}\n\nexport const ETH_TOKEN_INFO: TokenInfo = {\n  name: \"ETH\",\n  address: \"0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6\",\n  chainId: CHAIN_ID_ETH,\n  evmChainId: EVM_ETH_NETWORK_CHAIN_ID,\n  //logo: ethIcon,\n  maxAmount: 0.0001,\n  usdcPairedAddress: \"0x07865c6E87B9F70255377e024ace6630C1Eaa37F\",\n};\n\nexport const AVAX_TOKEN_INFO: TokenInfo = {\n  name: \"AVAX\",\n  address: \"0xd00ae08403B9bbb9124bB305C09058E32C39A48c\",\n  chainId: CHAIN_ID_AVAX,\n  evmChainId: EVM_AVAX_NETWORK_CHAIN_ID,\n  //logo: avaxIcon,\n  maxAmount: 0.01,\n  usdcPairedAddress: \"0x5425890298aed601595a70AB815c96711a31Bc65\",\n};\n\nexport const TOKEN_INFOS = [ETH_TOKEN_INFO, AVAX_TOKEN_INFO];\n\nexport const getSupportedSwaps = (tokenInfo: TokenInfo) => {\n  return TOKEN_INFOS.filter((x) => x !== tokenInfo);\n};\n\nexport const getEvmChainId = (chainId: ChainId): number | undefined => {\n  switch (chainId) {\n    case CHAIN_ID_ETH:\n      return EVM_ETH_NETWORK_CHAIN_ID;\n    case CHAIN_ID_POLYGON:\n      return EVM_POLYGON_NETWORK_CHAIN_ID;\n    case CHAIN_ID_AVAX:\n      return EVM_AVAX_NETWORK_CHAIN_ID;\n    case CHAIN_ID_BSC:\n      return EVM_BSC_NETWORK_CHAIN_ID;\n    default:\n      return undefined;\n  }\n};\n\nexport const getChainName = (chainId: ChainId) => {\n  switch (chainId) {\n    case CHAIN_ID_ETH:\n      return \"Ethereum\";\n    case CHAIN_ID_AVAX:\n      return \"Avalanche\";\n    default:\n      return \"\";\n  }\n};\n\nexport const RELAYER_FEE_USDC = \"0.00001\";\n\nexport const WORMHOLE_RPC_HOSTS = [\n  \"https://wormhole-v2-testnet-api.certus.one\",\n];\n\n// core bridge\nexport const CORE_BRIDGE_ADDRESS_ETHEREUM =\n  \"0x706abc4E45D419950511e474C7B9Ed348A4a716c\";\n\nexport const CORE_BRIDGE_ADDRESS_AVALANCHE =\n  \"0x7bbcE28e64B3F8b84d876Ab298393c38ad7aac4C\";\n\n// circle integration\nexport const CIRCLE_EMITTER_ADDRESS_ETHEREUM =\n  \"0xdbedb4ebd098e9f1777af9f8088e794d381309d1\";\n\nexport const CIRCLE_EMITTER_ADDRESS_AVALANCHE =\n  \"0x3e6a4543165aaecbf7ffc81e54a1c7939cb12cb8\";\n\n// gas\nexport const APPROVAL_GAS_LIMIT = \"100000\";\n","import { ethers } from \"ethers\";\nimport { TransactionReceipt } from \"@ethersproject/abstract-provider\";\nimport {\n  ChainId,\n  CHAIN_ID_ETH,\n  CHAIN_ID_AVAX,\n  getEmitterAddressEth,\n  hexToUint8Array,\n  nativeToHexString,\n  parseSequenceFromLogEth,\n  getSignedVAAWithRetry,\n} from \"@certusone/wormhole-sdk\";\nimport { grpc } from \"@improbable-eng/grpc-web\";\nimport {\n  PROTOCOL_UNISWAP_V2,\n  // PROTOCOL_UNISWAP_V3,\n  ExactInCrossParameters,\n  ExactOutCrossParameters,\n  QuoteType,\n  UniswapToUniswapQuoter,\n} from \"../route/cross-quote\";\nimport {\n  CIRCLE_EMITTER_ADDRESS_ETHEREUM,\n  CIRCLE_EMITTER_ADDRESS_AVALANCHE,\n  CORE_BRIDGE_ADDRESS_ETHEREUM,\n  CORE_BRIDGE_ADDRESS_AVALANCHE,\n  WORMHOLE_RPC_HOSTS,\n  AVAX_TOKEN_INFO,\n  ETH_TOKEN_INFO,\n} from \"../utils/consts\";\nimport {\n  evmSwapExactInFromVaaNative,\n  getEvmGasParametersForContract,\n} from \"./helpers\";\n// import { abi as SWAP_CONTRACT_V2_ABI } from \"../abi/contracts/CrossChainSwapV2.json\";\n// import { abi as SWAP_CONTRACT_V3_ABI } from \"../abi/contracts/CrossChainSwapV3.json\";\nimport { SWAP_CONTRACT_ADDRESS as CROSSCHAINSWAP_CONTRACT_ADDRESS_ETHEREUM } from \"../addresses/goerli\";\nimport { SWAP_CONTRACT_ADDRESS as CROSSCHAINSWAP_CONTRACT_ADDRESS_AVALANCHE } from \"../addresses/fuji\";\nimport { makeErc20Contract } from \"../route/evm\";\nimport {\n  CrossChainSwapV2,\n  CrossChainSwapV2__factory,\n  CrossChainSwapV3,\n  CrossChainSwapV3__factory,\n} from \"../ethers-contracts\";\n\nfunction makeNullSwapPath(): any[] {\n  const zeroBuffer = Buffer.alloc(20);\n  const nullAddress = \"0x\" + zeroBuffer.toString(\"hex\");\n  return [nullAddress, nullAddress];\n}\n\nconst NULL_SWAP_PATH = makeNullSwapPath();\n\ninterface SwapContractParameters {\n  address: string;\n}\n\ninterface WormholeParameters {\n  chainId: ChainId;\n  coreBridgeAddress: string;\n  circleEmitterAddress: string;\n}\n\ninterface ExecutionParameters {\n  crossChainSwap: SwapContractParameters;\n  wormhole: WormholeParameters;\n}\n\nconst EXECUTION_PARAMETERS_ETHEREUM: ExecutionParameters = {\n  crossChainSwap: {\n    address: CROSSCHAINSWAP_CONTRACT_ADDRESS_ETHEREUM,\n  },\n  wormhole: {\n    chainId: CHAIN_ID_ETH,\n    coreBridgeAddress: CORE_BRIDGE_ADDRESS_ETHEREUM,\n    circleEmitterAddress: CIRCLE_EMITTER_ADDRESS_ETHEREUM,\n  },\n};\n\nconst EXECUTION_PARAMETERS_AVALANCHE: ExecutionParameters = {\n  crossChainSwap: {\n    address: CROSSCHAINSWAP_CONTRACT_ADDRESS_AVALANCHE,\n  },\n  wormhole: {\n    chainId: CHAIN_ID_AVAX,\n    coreBridgeAddress: CORE_BRIDGE_ADDRESS_AVALANCHE,\n    circleEmitterAddress: CIRCLE_EMITTER_ADDRESS_AVALANCHE,\n  },\n};\n\nfunction makeExecutionParameters(chainId: ChainId): ExecutionParameters {\n  switch (chainId) {\n    case CHAIN_ID_ETH: {\n      return EXECUTION_PARAMETERS_ETHEREUM;\n    }\n    case CHAIN_ID_AVAX: {\n      return EXECUTION_PARAMETERS_AVALANCHE;\n    }\n    default: {\n      throw Error(\"unrecognized chain id\");\n    }\n  }\n}\n\nfunction makeCrossChainSwapEvmContract(\n  signerOrProvider: ethers.providers.Provider | ethers.Signer,\n  protocol: string,\n  contractAddress: string\n): CrossChainSwapV2 | CrossChainSwapV3 {\n  if (protocol === PROTOCOL_UNISWAP_V2) {\n    return CrossChainSwapV2__factory.connect(contractAddress, signerOrProvider);\n  } else {\n    return CrossChainSwapV3__factory.connect(contractAddress, signerOrProvider);\n  }\n}\n\nfunction addressToBytes32(\n  address: string,\n  wormholeChainId: ChainId\n): Uint8Array {\n  return hexToUint8Array(nativeToHexString(address, wormholeChainId)!);\n}\n\nexport interface ExactInParametersStruct {\n  amountIn: ethers.BigNumber;\n  amountOutMinimum: ethers.BigNumber;\n  targetAmountOutMinimum: ethers.BigNumber;\n  targetChainRecipient: Uint8Array;\n  deadline: ethers.BigNumber;\n  poolFee: ethers.BigNumber;\n}\n\nfunction evmMakeExactInSwapParameters(\n  amountIn: ethers.BigNumber,\n  recipientAddress: string,\n  dstWormholeChainId: ChainId,\n  quoteParams: ExactInCrossParameters\n): ExactInParametersStruct {\n  const src = quoteParams.src!;\n  const dst = quoteParams.dst!;\n\n  return {\n    amountIn,\n    amountOutMinimum: src.minAmountOut,\n    targetAmountOutMinimum: dst.minAmountOut,\n    targetChainRecipient: addressToBytes32(\n      recipientAddress,\n      dstWormholeChainId\n    ),\n    deadline: src.deadline,\n    poolFee: ethers.BigNumber.from(dst.poolFee || src.poolFee || 0),\n  };\n}\n\nfunction makePathArray(\n  quoteParams: ExactInCrossParameters | ExactOutCrossParameters\n): any[] {\n  if (quoteParams.src === undefined) {\n    return NULL_SWAP_PATH.concat(quoteParams.dst?.path);\n  } else if (quoteParams.dst === undefined) {\n    return quoteParams.src.path.concat(NULL_SWAP_PATH);\n  } else {\n    return quoteParams.src.path.concat(quoteParams.dst.path);\n  }\n}\n\nasync function evmApproveAndSwapExactIn(\n  srcProvider: ethers.providers.Provider,\n  srcWallet: ethers.Signer,\n  tokenInAddress: string,\n  quoteParams: ExactInCrossParameters,\n  srcExecutionParams: ExecutionParameters,\n  dstExecutionParams: ExecutionParameters,\n  isNative: boolean,\n  recipientAddress: string\n): Promise<TransactionReceipt> {\n  const swapContractParams = srcExecutionParams.crossChainSwap;\n\n  const protocol = quoteParams.src?.protocol!;\n  const contractWithSigner = makeCrossChainSwapEvmContract(\n    srcWallet,\n    protocol,\n    swapContractParams.address\n  );\n\n  // approve and swap this amount\n  const amountIn = quoteParams.src?.amountIn!;\n  const dstWormholeChainId = dstExecutionParams.wormhole.chainId;\n\n  const swapParams = evmMakeExactInSwapParameters(\n    amountIn,\n    recipientAddress,\n    dstWormholeChainId,\n    quoteParams\n  );\n\n  const pathArray = makePathArray(quoteParams);\n\n  const dstContractAddress = addressToBytes32(\n    dstExecutionParams.crossChainSwap.address,\n    dstWormholeChainId\n  );\n\n  const gasParams = getEvmGasParametersForContract(contractWithSigner);\n  // do the swap\n  {\n    const transactionParams = { value: amountIn, ...gasParams };\n\n    console.info(\"swapExactNativeInAndTransfer\");\n    const tx = await contractWithSigner.swapExactNativeInAndTransfer(\n      swapParams,\n      pathArray,\n      quoteParams.relayerFee.amount,\n      dstWormholeChainId,\n      dstContractAddress,\n      transactionParams\n    );\n    return tx.wait();\n  }\n}\n\nasync function swapExactInFromVaa(\n  dstProvider: ethers.providers.Provider,\n  dstWallet: ethers.Signer,\n  dstExecutionParams: ExecutionParameters,\n  dstProtocol: string,\n  encodedWormholeMessage: Uint8Array,\n  circleBridgeMessage: Uint8Array,\n  circleAttestation: Uint8Array\n): Promise<TransactionReceipt> {\n  const swapContractParams = dstExecutionParams.crossChainSwap;\n\n  const contractWithSigner = makeCrossChainSwapEvmContract(\n    dstWallet,\n    dstProtocol,\n    swapContractParams.address\n  );\n\n  console.info(\"evmSwapExactInFromVaaNative\");\n  return evmSwapExactInFromVaaNative(\n    contractWithSigner,\n    encodedWormholeMessage,\n    circleBridgeMessage,\n    circleAttestation\n  );\n}\n\ninterface VaaSearchParams {\n  sequence: string;\n  emitterAddress: string;\n}\n\nexport function makeEvmProvider(tokenAddress: string) {\n  let url;\n  switch (tokenAddress) {\n    case ETH_TOKEN_INFO.address:\n      url = process.env.REACT_APP_GOERLI_PROVIDER;\n      if (!url) throw new Error(\"REACT_APP_GOERLI_PROVIDER not set\");\n      break;\n    case AVAX_TOKEN_INFO.address:\n      url = process.env.REACT_APP_FUJI_PROVIDER;\n      if (!url) throw new Error(\"REACT_APP_FUJI_PROVIDER not set\");\n      break;\n    default:\n      throw Error(\"unrecognized token address\");\n  }\n  return new ethers.providers.StaticJsonRpcProvider(url);\n}\n\nexport class UniswapToUniswapExecutor {\n  // quoting\n  quoter: UniswapToUniswapQuoter;\n  cachedExactInParams: ExactInCrossParameters;\n  cachedExactOutParams: ExactOutCrossParameters;\n  quoteType: QuoteType;\n\n  // swapping\n  isNative: boolean;\n  slippage: string;\n  relayerFeeAmount: string;\n  srcExecutionParams: ExecutionParameters;\n  dstExecutionParams: ExecutionParameters;\n\n  // vaa handling\n  transportFactory: grpc.TransportFactory;\n  vaaSearchParams: VaaSearchParams;\n  vaaBytes: Uint8Array;\n  circleBridgeMessage: Uint8Array;\n  circleAttestation: Uint8Array;\n\n  // receipts\n  srcEvmReceipt: TransactionReceipt;\n  dstEvmReceipt: TransactionReceipt;\n  srcTerraReceipt: any;\n  dstTerraReceipt: any;\n\n  constructor() {\n    this.quoter = new UniswapToUniswapQuoter();\n  }\n\n  async initialize(\n    tokenInAddress: string,\n    tokenOutAddress: string,\n    isNative: boolean\n  ): Promise<void> {\n    this.isNative = isNative;\n\n    await this.quoter.initialize(tokenInAddress, tokenOutAddress);\n\n    // now that we have a chain id for each network, get contract info for each chain\n    this.srcExecutionParams = makeExecutionParameters(\n      this.quoter.getSrcChainId()\n    );\n    this.dstExecutionParams = makeExecutionParameters(\n      this.quoter.getDstChainId()\n    );\n  }\n\n  setSlippage(slippage: string): void {\n    this.slippage = slippage;\n  }\n\n  setRelayerFee(amount: string): void {\n    this.relayerFeeAmount = amount;\n  }\n\n  areSwapParametersUndefined(): boolean {\n    return this.slippage === undefined || this.relayerFeeAmount === undefined;\n  }\n\n  setDeadlines(deadline: string): void {\n    this.quoter.setDeadlines(deadline);\n  }\n\n  /*\n  async makeTokens(\n    tokenInAddress: string,\n    tokenOutAddress: string\n  ): Promise<void> {\n    const quoter = this.quoter;\n\n    const [srcTokenIn, srcTokenOut] = await quoter.makeSrcTokens(\n      tokenInAddress\n    );\n    const [dstTokenIn, dstTokenOut] = await quoter.makeDstTokens(\n      tokenOutAddress\n    );\n\n    this.tokens = {\n      srcIn: srcTokenIn,\n      srcOut: srcTokenOut,\n      dstIn: dstTokenIn,\n      dstOut: dstTokenOut,\n    };\n  }\n\n  getTokens(): CrossChainSwapTokens {\n    return this.tokens;\n  }\n*/\n  async computeAndVerifySrcPoolAddress(): Promise<string> {\n    return this.quoter.computeAndVerifySrcPoolAddress();\n  }\n\n  async computeAndVerifyDstPoolAddress(): Promise<string> {\n    return this.quoter.computeAndVerifyDstPoolAddress();\n  }\n\n  async computeQuoteExactIn(amountIn: string): Promise<ExactInCrossParameters> {\n    if (this.areSwapParametersUndefined()) {\n      throw Error(\"undefined swap parameters\");\n    }\n\n    this.cachedExactInParams = await this.quoter.computeExactInParameters(\n      amountIn,\n      this.slippage,\n      this.relayerFeeAmount\n    );\n    this.quoteType = QuoteType.ExactIn;\n    return this.cachedExactInParams;\n  }\n\n  async computeQuoteExactOut(\n    amountOut: string\n  ): Promise<ExactOutCrossParameters> {\n    if (this.areSwapParametersUndefined()) {\n      throw Error(\"undefined swap parameters\");\n    }\n\n    this.cachedExactOutParams = await this.quoter.computeExactOutParameters(\n      amountOut,\n      this.slippage,\n      this.relayerFeeAmount\n    );\n    this.quoteType = QuoteType.ExactOut;\n    return this.cachedExactOutParams;\n  }\n\n  getSrcEvmProvider(): ethers.providers.Provider {\n    return this.quoter.getSrcEvmProvider()!;\n  }\n\n  getDstEvmProvider(): ethers.providers.Provider {\n    return this.quoter.getDstEvmProvider()!;\n  }\n\n  getTokenInAddress(): string {\n    return this.quoter.tokenInAddress;\n  }\n\n  getTokenOutAddress(): string {\n    return this.quoter.tokenOutAddress;\n  }\n\n  async evmApproveAndSwapExactIn(\n    srcWallet: ethers.Signer,\n    recipientAddress: string\n  ): Promise<TransactionReceipt> {\n    return evmApproveAndSwapExactIn(\n      this.getSrcEvmProvider(),\n      srcWallet,\n      this.getTokenInAddress(),\n      this.cachedExactInParams,\n      this.srcExecutionParams,\n      this.dstExecutionParams,\n      this.isNative,\n      recipientAddress\n    );\n  }\n\n  async evmApproveAndSwap(\n    wallet: ethers.Signer,\n    recipientAddress: string\n  ): Promise<TransactionReceipt> {\n    this.srcEvmReceipt = await this.evmApproveAndSwapExactIn(\n      wallet,\n      recipientAddress\n    );\n\n    this.fetchAndSetEvmEmitterAndSequence();\n    return this.srcEvmReceipt;\n  }\n\n  fetchAndSetEmitterAndSequence(): void {\n    // TODO\n    return;\n  }\n\n  fetchAndSetTerraEmitterAndSequence(): void {\n    // TODO\n    return;\n  }\n\n  fetchAndSetEvmEmitterAndSequence(): void {\n    const receipt = this.srcEvmReceipt;\n    if (receipt === undefined) {\n      throw Error(\"no swap receipt found\");\n    }\n\n    const wormholeParams = this.srcExecutionParams.wormhole;\n\n    this.vaaSearchParams = {\n      sequence: parseSequenceFromLogEth(\n        receipt,\n        wormholeParams.coreBridgeAddress\n      ),\n      emitterAddress: getEmitterAddressEth(wormholeParams.circleEmitterAddress),\n    };\n  }\n\n  async fetchSignedVaaFromSwap(): Promise<void> {\n    // TODO: hit circle api for signature\n    const vaaSearchParams = this.vaaSearchParams;\n    if (vaaSearchParams === undefined) {\n      throw Error(\"no vaa search params found\");\n    }\n    const sequence = vaaSearchParams.sequence;\n    const emitterAddress = vaaSearchParams.emitterAddress;\n    console.info(`sequence: ${sequence}, emitterAddress: ${emitterAddress}`);\n    // wait for VAA to be signed\n\n    const vaaResponse = await getSignedVAAWithRetry(\n      WORMHOLE_RPC_HOSTS,\n      this.srcExecutionParams.wormhole.chainId,\n      vaaSearchParams.emitterAddress,\n      vaaSearchParams.sequence,\n      {\n        transport: this.transportFactory,\n      }\n    );\n    // grab vaaBytes\n    this.vaaBytes = vaaResponse.vaaBytes;\n  }\n\n  async fetchVaaAndSwap(wallet: ethers.Signer): Promise<TransactionReceipt> {\n    await this.fetchSignedVaaFromSwap();\n\n    this.dstEvmReceipt = await this.evmSwapExactInFromVaa(wallet);\n\n    return this.dstEvmReceipt;\n  }\n\n  async evmSwapExactInFromVaa(\n    wallet: ethers.Signer\n  ): Promise<TransactionReceipt> {\n    return swapExactInFromVaa(\n      this.getDstEvmProvider(),\n      wallet,\n      this.dstExecutionParams,\n      this.cachedExactInParams.dst?.protocol!,\n      this.vaaBytes,\n      this.circleBridgeMessage,\n      this.circleAttestation\n    );\n  }\n\n  setTransport(transportFactory: grpc.TransportFactory) {\n    this.transportFactory = transportFactory;\n  }\n\n  //getSwapResult(\n  //  walletAddress: string,\n  //  onSwapResult: (result: boolean) => void\n  //) {\n  //  console.log(this.cachedExactInParams.dst.protocol);\n  //  console.log(this.dstExecutionParams.crossChainSwap.address);\n  //  const contract = makeCrossChainSwapContract(\n  //    this.getDstEvmProvider(),\n  //    this.quoteType === QuoteType.ExactIn\n  //      ? this.cachedExactInParams.dst.protocol\n  //      : this.cachedExactOutParams.dst.protocol,\n  //    this.dstExecutionParams.crossChainSwap.address\n  //  );\n  //  const filter = contract.filters.SwapResult(walletAddress);\n  //  contract.once(\n  //    filter,\n  //    (recipient, tokenAddress, caller, amount, success) => {\n  //      onSwapResult(success);\n  //    }\n  //  );\n  //}\n}\n","export const SWAP_CONTRACT_ADDRESS =\n  \"0xDBd3BF9ee98657Fc6415D49Ad57D808218A9bd9b\";\n","export const SWAP_CONTRACT_ADDRESS =\n  \"0x06fBF791a3822D267280274E44b88476Ea5C8bc9\";\n","import {\n  Button,\n  CircularProgress,\n  makeStyles,\n  Typography,\n} from \"@material-ui/core\";\nimport { ReactChild } from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: \"relative\",\n  },\n  button: {\n    marginTop: theme.spacing(2),\n    textTransform: \"none\",\n    width: \"100%\",\n  },\n  loader: {\n    position: \"absolute\",\n    bottom: 0,\n    left: \"50%\",\n    marginLeft: -12,\n    marginBottom: 6,\n  },\n  error: {\n    marginTop: theme.spacing(1),\n    textAlign: \"center\",\n  },\n}));\n\nexport default function ButtonWithLoader({\n  disabled,\n  onClick,\n  showLoader,\n  error,\n  children,\n  className,\n}: {\n  disabled?: boolean;\n  onClick: () => void;\n  showLoader?: boolean;\n  error?: string;\n  children: ReactChild;\n  className?: string;\n}) {\n  const classes = useStyles();\n  return (\n    <>\n      <div className={classes.root}>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          className={className || classes.button}\n          disabled={disabled}\n          onClick={onClick}\n        >\n          {children}\n        </Button>\n        {showLoader ? (\n          <CircularProgress\n            size={24}\n            color=\"inherit\"\n            className={className || classes.loader}\n          />\n        ) : null}\n      </div>\n      {error ? (\n        <Typography color=\"error\" className={classes.error}>\n          {error}\n        </Typography>\n      ) : null}\n    </>\n  );\n}\n","import detectEthereumProvider from \"@metamask/detect-provider\";\nimport { BigNumber, ethers } from \"ethers\";\nimport React, {\n  ReactChildren,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n} from \"react\";\n\nexport type Provider = ethers.providers.Web3Provider | undefined;\nexport type Signer = ethers.Signer | undefined;\n\ninterface IEthereumProviderContext {\n  connect(): void;\n  disconnect(): void;\n  provider: Provider;\n  chainId: number | undefined;\n  signer: Signer;\n  signerAddress: string | undefined;\n  providerError: string | null;\n}\n\nconst EthereumProviderContext = React.createContext<IEthereumProviderContext>({\n  connect: () => {},\n  disconnect: () => {},\n  provider: undefined,\n  chainId: undefined,\n  signer: undefined,\n  signerAddress: undefined,\n  providerError: null,\n});\nexport const EthereumProviderProvider = ({\n  children,\n}: {\n  children: ReactChildren;\n}) => {\n  const [providerError, setProviderError] = useState<string | null>(null);\n  const [provider, setProvider] = useState<Provider>(undefined);\n  const [chainId, setChainId] = useState<number | undefined>(undefined);\n  const [signer, setSigner] = useState<Signer>(undefined);\n  const [signerAddress, setSignerAddress] = useState<string | undefined>(\n    undefined\n  );\n  const connect = useCallback(() => {\n    setProviderError(null);\n    detectEthereumProvider()\n      .then((detectedProvider) => {\n        if (detectedProvider) {\n          const provider = new ethers.providers.Web3Provider(\n            // @ts-ignore\n            detectedProvider,\n            \"any\"\n          );\n          provider\n            .send(\"eth_requestAccounts\", [])\n            .then(() => {\n              setProviderError(null);\n              setProvider(provider);\n              provider\n                .getNetwork()\n                .then((network) => {\n                  setChainId(network.chainId);\n                })\n                .catch(() => {\n                  setProviderError(\n                    \"An error occurred while getting the network\"\n                  );\n                });\n              const signer = provider.getSigner();\n              setSigner(signer);\n              signer\n                .getAddress()\n                .then((address) => {\n                  setSignerAddress(address);\n                })\n                .catch(() => {\n                  setProviderError(\n                    \"An error occurred while getting the signer address\"\n                  );\n                });\n              // TODO: try using ethers directly\n              // @ts-ignore\n              if (detectedProvider && detectedProvider.on) {\n                // @ts-ignore\n                detectedProvider.on(\"chainChanged\", (chainId) => {\n                  try {\n                    setChainId(BigNumber.from(chainId).toNumber());\n                  } catch (e) {}\n                });\n                // @ts-ignore\n                detectedProvider.on(\"accountsChanged\", (accounts) => {\n                  try {\n                    const signer = provider.getSigner();\n                    setSigner(signer);\n                    signer\n                      .getAddress()\n                      .then((address) => {\n                        setSignerAddress(address);\n                      })\n                      .catch(() => {\n                        setProviderError(\n                          \"An error occurred while getting the signer address\"\n                        );\n                      });\n                  } catch (e) {}\n                });\n              }\n            })\n            .catch(() => {\n              setProviderError(\n                \"An error occurred while requesting eth accounts\"\n              );\n            });\n        } else {\n          setProviderError(\"Please install MetaMask\");\n        }\n      })\n      .catch(() => {\n        setProviderError(\"Please install MetaMask\");\n      });\n  }, []);\n  const disconnect = useCallback(() => {\n    setProviderError(null);\n    setProvider(undefined);\n    setChainId(undefined);\n    setSigner(undefined);\n    setSignerAddress(undefined);\n  }, []);\n  const contextValue = useMemo(\n    () => ({\n      connect,\n      disconnect,\n      provider,\n      chainId,\n      signer,\n      signerAddress,\n      providerError,\n    }),\n    [\n      connect,\n      disconnect,\n      provider,\n      chainId,\n      signer,\n      signerAddress,\n      providerError,\n    ]\n  );\n  return (\n    <EthereumProviderContext.Provider value={contextValue}>\n      {children}\n    </EthereumProviderContext.Provider>\n  );\n};\nexport const useEthereumProvider = () => {\n  return useContext(EthereumProviderContext);\n};\n","import { Button, makeStyles, Tooltip } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    display: \"block\",\n    margin: `${theme.spacing(1)}px auto`,\n    width: \"100%\",\n    maxWidth: 400,\n  },\n}));\n\nconst ToggleConnectedButton = ({\n  connect,\n  disconnect,\n  connected,\n  pk,\n}: {\n  connect(): any;\n  disconnect(): any;\n  connected: boolean;\n  pk: string;\n}) => {\n  const classes = useStyles();\n  const is0x = pk.startsWith(\"0x\");\n  return connected ? (\n    <Tooltip title={pk}>\n      <Button\n        color=\"secondary\"\n        variant=\"contained\"\n        size=\"small\"\n        onClick={disconnect}\n        className={classes.button}\n      >\n        Disconnect {pk.substring(0, is0x ? 6 : 3)}...\n        {pk.substr(pk.length - (is0x ? 4 : 3))}\n      </Button>\n    </Tooltip>\n  ) : (\n    <Button\n      color=\"primary\"\n      variant=\"contained\"\n      size=\"small\"\n      onClick={connect}\n      className={classes.button}\n    >\n      Connect Wallet\n    </Button>\n  );\n};\n\nexport default ToggleConnectedButton;\n","import { Typography } from \"@material-ui/core\";\nimport { useEthereumProvider } from \"../contexts/EthereumProviderContext\";\nimport ToggleConnectedButton from \"./ToggleConnectedButton\";\n\nconst EthereumSignerKey = () => {\n  const { connect, disconnect, signerAddress, providerError } =\n    useEthereumProvider();\n  return (\n    <>\n      <ToggleConnectedButton\n        connect={connect}\n        disconnect={disconnect}\n        connected={!!signerAddress}\n        pk={signerAddress || \"\"}\n      />\n      {providerError ? (\n        <Typography variant=\"body2\" color=\"error\">\n          {providerError}\n        </Typography>\n      ) : null}\n    </>\n  );\n};\n\nexport default EthereumSignerKey;\n","export default __webpack_public_path__ + \"static/media/eth.364436c5.svg\";","export default __webpack_public_path__ + \"static/media/avax.234db155.svg\";","import {\n  ListItemIcon,\n  ListItemText,\n  makeStyles,\n  MenuItem,\n  TextField,\n} from \"@material-ui/core\";\nimport {\n  AVAX_TOKEN_INFO,\n  ETH_TOKEN_INFO,\n  TokenInfo,\n} from \"../utils/consts\";\n\nimport ethIcon from \"../icons/eth.svg\";\nimport polygonIcon from \"../icons/polygon.svg\";\nimport terraIcon from \"../icons/terra.svg\";\nimport bscIcon from \"../icons/bsc.svg\";\nimport avaxIcon from \"../icons/avax.svg\";\n\nconst useStyles = makeStyles((theme) => ({\n  select: {\n    \"& .MuiSelect-root\": {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n  },\n  listItemIcon: {\n    minWidth: 40,\n  },\n  icon: {\n    height: 24,\n    maxWidth: 24,\n  },\n}));\n\nconst getLogo = (name: string) => {\n  switch (name) {\n    case ETH_TOKEN_INFO.name:\n      return ethIcon;\n    case AVAX_TOKEN_INFO.name:\n      return avaxIcon;\n    default:\n      return \"\";\n  }\n};\n\nconst createTokenMenuItem = ({ name }: TokenInfo, classes: any) => (\n  <MenuItem key={name} value={name}>\n    <ListItemIcon className={classes.listItemIcon}>\n      <img src={getLogo(name)} alt={name} className={classes.icon} />\n    </ListItemIcon>\n    <ListItemText>{name}</ListItemText>\n  </MenuItem>\n);\n\ninterface TokenSelectProps {\n  tokens: TokenInfo[];\n  value: string;\n  onChange: (event: any) => void;\n  disabled: boolean;\n}\n\nexport default function TokenSelect({\n  tokens,\n  value,\n  onChange,\n  disabled,\n}: TokenSelectProps) {\n  const classes = useStyles();\n\n  return (\n    <TextField\n      value={value}\n      onChange={onChange}\n      select\n      variant=\"outlined\"\n      fullWidth\n      className={classes.select}\n      disabled={disabled}\n    >\n      {tokens.map((token) => createTokenMenuItem(token, classes))}\n    </TextField>\n  );\n}\n","import { createTheme, responsiveFontSizes } from \"@material-ui/core\";\n\nexport const COLORS = {\n  blue: \"#1975e6\",\n  blueWithTransparency: \"rgba(25, 117, 230, 0.8)\",\n  gray: \"#4e4e54\",\n  green: \"#0ac2af\",\n  greenWithTransparency: \"rgba(10, 194, 175, 0.8)\",\n  lightGreen: \"rgba(51, 242, 223, 1)\",\n  lightBlue: \"#83b9fc\",\n  nearBlack: \"#000008\",\n  nearBlackWithMinorTransparency: \"rgba(0,0,0,.25)\",\n  red: \"#aa0818\",\n  darkRed: \"#810612\",\n};\n\nexport const theme = responsiveFontSizes(\n  createTheme({\n    palette: {\n      type: \"dark\",\n      background: {\n        default: COLORS.nearBlack,\n        paper: COLORS.nearBlack,\n      },\n      divider: COLORS.gray,\n      text: {\n        primary: \"rgba(255,255,255,0.98)\",\n      },\n      primary: {\n        main: COLORS.blueWithTransparency,\n        light: COLORS.lightBlue,\n      },\n      secondary: {\n        main: COLORS.greenWithTransparency,\n        light: COLORS.lightGreen,\n      },\n      error: {\n        main: COLORS.red,\n      },\n    },\n    typography: {\n      fontFamily: \"'Sora', sans-serif\",\n      h1: {\n        fontWeight: \"200\",\n      },\n      h2: {\n        fontWeight: \"200\",\n      },\n      h4: {\n        fontWeight: \"500\",\n      },\n    },\n    overrides: {\n      MuiCssBaseline: {\n        \"@global\": {\n          \"*\": {\n            scrollbarWidth: \"thin\",\n            scrollbarColor: `${COLORS.gray} ${COLORS.nearBlackWithMinorTransparency}`,\n          },\n          \"*::-webkit-scrollbar\": {\n            width: \"8px\",\n            height: \"8px\",\n            backgroundColor: COLORS.nearBlackWithMinorTransparency,\n          },\n          \"*::-webkit-scrollbar-thumb\": {\n            backgroundColor: COLORS.gray,\n            borderRadius: \"4px\",\n          },\n          \"*::-webkit-scrollbar-corner\": {\n            // this hides an annoying white box which appears when both scrollbars are present\n            backgroundColor: \"transparent\",\n          },\n        },\n      },\n      MuiAccordion: {\n        root: {\n          backgroundColor: COLORS.nearBlackWithMinorTransparency,\n          \"&:before\": {\n            display: \"none\",\n          },\n        },\n        rounded: {\n          \"&:first-child\": {\n            borderTopLeftRadius: \"16px\",\n            borderTopRightRadius: \"16px\",\n          },\n          \"&:last-child\": {\n            borderBottomLeftRadius: \"16px\",\n            borderBottomRightRadius: \"16px\",\n          },\n        },\n      },\n      MuiAlert: {\n        root: {\n          borderRadius: \"8px\",\n          border: \"1px solid\",\n        },\n      },\n      MuiButton: {\n        root: {\n          borderRadius: \"5px\",\n          textTransform: \"none\",\n        },\n      },\n      MuiLink: {\n        root: {\n          color: COLORS.lightBlue,\n        },\n      },\n      MuiPaper: {\n        rounded: {\n          borderRadius: \"16px\",\n        },\n      },\n      MuiStepper: {\n        root: {\n          backgroundColor: \"transparent\",\n          padding: 0,\n        },\n      },\n      MuiStep: {\n        root: {\n          backgroundColor: COLORS.nearBlackWithMinorTransparency,\n          borderRadius: \"16px\",\n          padding: 16,\n        },\n      },\n      MuiStepConnector: {\n        lineVertical: {\n          borderLeftWidth: 0,\n        },\n      },\n      MuiStepContent: {\n        root: {\n          borderLeftWidth: 0,\n        },\n      },\n      MuiStepLabel: {\n        label: {\n          fontSize: 16,\n          fontWeight: \"300\",\n          \"&.MuiStepLabel-active\": {\n            fontWeight: \"300\",\n          },\n          \"&.MuiStepLabel-completed\": {\n            fontWeight: \"300\",\n          },\n        },\n      },\n      MuiTab: {\n        root: {\n          fontSize: 18,\n          fontWeight: \"300\",\n          padding: 12,\n          textTransform: \"none\",\n        },\n      },\n    },\n  })\n);\n","const MM_ERR_WITH_INFO_START =\n  \"VM Exception while processing transaction: revert \";\nconst parseError = (e: any) =>\n  e?.data?.message?.startsWith(MM_ERR_WITH_INFO_START)\n    ? e.data.message.replace(MM_ERR_WITH_INFO_START, \"\")\n    : e?.response?.data?.error // terra error\n    ? e.response.data.error\n    : e?.message\n    ? e.message\n    : \"An unknown error occurred\";\nexport default parseError;\n","import {\n  Button,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  InputAdornment,\n  TextField,\n} from \"@material-ui/core\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { useState } from \"react\";\n\nconst useStyles = makeStyles({\n  topScrollPaper: {\n    alignItems: \"flex-start\",\n  },\n  topPaperScrollBody: {\n    verticalAlign: \"top\",\n  },\n  button: {\n    float: \"right\",\n    \"&:hover\": {\n      backgroundColor: \"transparent\",\n    },\n  },\n});\n\nconst clamp = (value: number, min: number, max: number) => {\n  if (isNaN(value)) {\n    return value;\n  }\n  return Math.min(Math.max(min, value), max);\n};\n\nexport default function Settings({\n  disabled,\n  slippage,\n  deadline,\n  onSlippageChange,\n  onDeadlineChange,\n}: {\n  disabled: boolean;\n  slippage: string;\n  deadline: string;\n  onSlippageChange: (slippage: string) => void;\n  onDeadlineChange: (deadline: string) => void;\n}) {\n  const classes = useStyles();\n  const [dialogIsOpen, setDialogIsOpen] = useState(false);\n\n  const dialog = (\n    <Dialog\n      open={dialogIsOpen}\n      aria-labelledby=\"simple-dialog-title\"\n      onClose={() => setDialogIsOpen(false)}\n      maxWidth=\"xs\"\n      scroll=\"paper\"\n    >\n      <DialogTitle id=\"simple-dialog-title\">Transaction Settings</DialogTitle>\n      <DialogContent>\n        <TextField\n          variant=\"outlined\"\n          label=\"Slippage tolerance\"\n          value={slippage}\n          fullWidth\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">%</InputAdornment>,\n          }}\n          margin=\"normal\"\n          type=\"number\"\n          onChange={(event) => {\n            onSlippageChange(\n              event.target.value === \"\"\n                ? \"\"\n                : clamp(parseFloat(event.target.value), 0, 100).toString()\n            );\n          }}\n        ></TextField>\n        <TextField\n          variant=\"outlined\"\n          label=\"Transaction deadline\"\n          value={deadline}\n          fullWidth\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">minutes</InputAdornment>\n            ),\n          }}\n          margin=\"normal\"\n          type=\"number\"\n          onChange={(event) => {\n            onDeadlineChange(\n              event.target.value === \"\"\n                ? \"\"\n                : clamp(parseFloat(event.target.value), 1, 100).toString()\n            );\n          }}\n        ></TextField>\n      </DialogContent>\n    </Dialog>\n  );\n\n  return (\n    <div>\n      <Button\n        className={classes.button}\n        onClick={() => {\n          setDialogIsOpen(true);\n        }}\n        disabled={disabled}\n        disableRipple\n        endIcon={<SettingsIcon />}\n      />\n      {dialog}\n    </div>\n  );\n}\n","import \"../css/CircleLoader.css\";\n\nexport default function CircleLoader() {\n  return (\n    <div id={\"loaderContainer\"}>\n      <div id={\"circle\"}>\n        <div id={\"inner\"}></div>\n      </div>\n    </div>\n  );\n}\n","import {\n  ChainId,\n  CHAIN_ID_AVAX,\n  CHAIN_ID_POLYGON,\n  isEVMChain,\n} from \"@certusone/wormhole-sdk\";\nimport { LinearProgress, makeStyles, Typography } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { useEthereumProvider } from \"../contexts/EthereumProviderContext\";\nimport { getChainName } from \"../utils/consts\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(2),\n    textAlign: \"center\",\n  },\n  message: {\n    marginTop: theme.spacing(1),\n  },\n}));\n\nexport default function TransactionProgress({\n  chainId,\n  txBlockNumber,\n  hasSignedVAA,\n  isTargetSwapComplete,\n}: {\n  chainId: ChainId;\n  txBlockNumber: number | undefined;\n  hasSignedVAA: boolean;\n  isTargetSwapComplete: boolean;\n}) {\n  const classes = useStyles();\n  const { provider } = useEthereumProvider();\n  const [currentBlock, setCurrentBlock] = useState(0);\n  useEffect(() => {\n    if (hasSignedVAA || !txBlockNumber) return;\n    if (isEVMChain(chainId) && provider) {\n      let cancelled = false;\n      (async () => {\n        while (!cancelled) {\n          await new Promise((resolve) => setTimeout(resolve, 500));\n          try {\n            const newBlock = await provider.getBlockNumber();\n            if (!cancelled) {\n              setCurrentBlock(newBlock);\n            }\n          } catch (e) {\n            console.error(e);\n          }\n        }\n      })();\n      return () => {\n        cancelled = true;\n      };\n    }\n  }, [hasSignedVAA, chainId, provider, txBlockNumber]);\n  let blockDiff =\n    txBlockNumber !== undefined && txBlockNumber && currentBlock\n      ? currentBlock - txBlockNumber\n      : 0;\n  const expectedBlocks =\n    chainId === CHAIN_ID_POLYGON ? 512 : CHAIN_ID_AVAX ? 1 : 15;\n  blockDiff = Math.min(Math.max(blockDiff, 0), expectedBlocks);\n  let value;\n  let valueBuffer;\n  let message;\n  if (!hasSignedVAA) {\n    value = (blockDiff / expectedBlocks) * 50;\n    valueBuffer = 50;\n    message = `Waiting for ${blockDiff} / ${expectedBlocks} confirmations on ${getChainName(\n      chainId\n    )}...`;\n  } else if (!isTargetSwapComplete) {\n    value = 50;\n    valueBuffer = 100;\n    message = \"Waiting for relayer to complete swap...\";\n  } else {\n    value = 100;\n    valueBuffer = 100;\n    message = \"Success!\";\n  }\n  return (\n    <div className={classes.root}>\n      <LinearProgress\n        variant=\"buffer\"\n        value={value}\n        valueBuffer={valueBuffer}\n      />\n      <Typography variant=\"body2\" className={classes.message}>\n        {message}\n      </Typography>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/Discord.3cc30da6.svg\";","export default __webpack_public_path__ + \"static/media/Docs.5306a132.svg\";","export default __webpack_public_path__ + \"static/media/Github.cf553f61.svg\";","export default __webpack_public_path__ + \"static/media/Medium.a9e68aca.svg\";","export default __webpack_public_path__ + \"static/media/Telegram.86d97a48.svg\";","export default __webpack_public_path__ + \"static/media/Twitter.06e4f08c.svg\";","export default __webpack_public_path__ + \"static/media/wormhole_logo.9f999ea4.svg\";","import { IconButton, makeStyles, Typography } from \"@material-ui/core\";\nimport Discord from \"../icons/Discord.svg\";\nimport Docs from \"../icons/Docs.svg\";\nimport Github from \"../icons/Github.svg\";\nimport Medium from \"../icons/Medium.svg\";\nimport Telegram from \"../icons/Telegram.svg\";\nimport Twitter from \"../icons/Twitter.svg\";\nimport Wormhole from \"../icons/wormhole_logo.svg\";\n\nconst useStyles = makeStyles((theme) => ({\n  footer: {\n    margin: theme.spacing(2, 0, 2),\n    textAlign: \"center\",\n  },\n  socialIcon: {\n    \"& img\": {\n      height: 24,\n      width: 24,\n    },\n  },\n  builtWithContainer: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    opacity: 0.5,\n    marginTop: theme.spacing(1),\n  },\n  wormholeIcon: {\n    height: 48,\n    width: 192,\n    filter: \"contrast(0)\",\n    transition: \"filter 0.5s\",\n    \"&:hover\": {\n      filter: \"contrast(1)\",\n    },\n    verticalAlign: \"middle\",\n    marginRight: theme.spacing(1),\n  },\n}));\n\nexport default function Footer() {\n  const classes = useStyles();\n  return (\n    <footer className={classes.footer}>\n      <div>\n        <IconButton\n          href=\"https://docs.wormholenetwork.com/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className={classes.socialIcon}\n        >\n          <img src={Docs} alt=\"Docs\" />\n        </IconButton>\n        <IconButton\n          href=\"https://discord.gg/wormholecrypto\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className={classes.socialIcon}\n        >\n          <img src={Discord} alt=\"Discord\" />\n        </IconButton>\n        <IconButton\n          href=\"https://github.com/certusone/wormhole\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className={classes.socialIcon}\n        >\n          <img src={Github} alt=\"Github\" />\n        </IconButton>\n        <IconButton\n          href=\"http://wormholecrypto.medium.com\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className={classes.socialIcon}\n        >\n          <img src={Medium} alt=\"Medium\" />\n        </IconButton>\n        <IconButton\n          href=\"https://t.me/wormholecrypto\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className={classes.socialIcon}\n        >\n          <img src={Telegram} alt=\"Telegram\" />\n        </IconButton>\n        <IconButton\n          href=\"https://twitter.com/wormholecrypto\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className={classes.socialIcon}\n        >\n          <img src={Twitter} alt=\"Twitter\" />\n        </IconButton>\n      </div>\n      <div>\n        <a\n          href=\"https://wormholenetwork.com/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <img src={Wormhole} alt=\"Wormhole\" className={classes.wormholeIcon} />\n        </a>\n      </div>\n      <div className={classes.builtWithContainer}>\n        <Typography variant=\"body2\">Open Source</Typography>\n        <Typography variant=\"body2\">Built with &#10084;</Typography>\n      </div>\n    </footer>\n  );\n}\n","import {\n  NetworkInfo,\n  Wallet,\n  WalletProvider,\n  useWallet,\n} from \"@terra-money/wallet-provider\";\nimport React, {\n  ReactChildren,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n} from \"react\";\n\nconst testnet: NetworkInfo = {\n  name: \"testnet\",\n  chainID: \"bombay-12\",\n  lcd: \"https://bombay-lcd.terra.dev\",\n};\n\nconst walletConnectChainIds: Record<number, NetworkInfo> = {\n  0: testnet,\n};\n\ninterface ITerraWalletContext {\n  connect(): void;\n  disconnect(): void;\n  connected: boolean;\n  wallet: any;\n}\n\nconst TerraWalletContext = React.createContext<ITerraWalletContext>({\n  connect: () => {},\n  disconnect: () => {},\n  connected: false,\n  wallet: null,\n});\n\nexport const TerraWalletWrapper = ({\n  children,\n}: {\n  children: ReactChildren;\n}) => {\n  // TODO: Use wallet instead of useConnectedWallet.\n  const terraWallet = useWallet();\n  const [, setWallet] = useState<Wallet | undefined>(undefined);\n  const [connected, setConnected] = useState(false);\n\n  const connect = useCallback(() => {\n    const CHROME_EXTENSION = 1;\n    if (terraWallet) {\n      terraWallet.connect(terraWallet.availableConnectTypes[CHROME_EXTENSION]);\n      setWallet(terraWallet);\n      setConnected(true);\n    }\n  }, [terraWallet]);\n\n  const disconnect = useCallback(() => {\n    setConnected(false);\n    setWallet(undefined);\n  }, []);\n\n  const contextValue = useMemo(\n    () => ({\n      connect,\n      disconnect,\n      connected,\n      wallet: terraWallet,\n    }),\n    [connect, disconnect, connected, terraWallet]\n  );\n\n  return (\n    <TerraWalletContext.Provider value={contextValue}>\n      {children}\n    </TerraWalletContext.Provider>\n  );\n};\n\nexport const TerraWalletProvider = ({\n  children,\n}: {\n  children: ReactChildren;\n}) => {\n  return (\n    <WalletProvider\n      defaultNetwork={testnet}\n      walletConnectChainIds={walletConnectChainIds}\n    >\n      <TerraWalletWrapper>{children}</TerraWalletWrapper>\n    </WalletProvider>\n  );\n};\n\nexport const useTerraWallet = () => {\n  return useContext(TerraWalletContext);\n};\n","import { useTerraWallet } from \"../contexts/TerraWalletContext\";\nimport ToggleConnectedButton from \"./ToggleConnectedButton\";\n\nconst TerraWalletKey = () => {\n  const { connect, disconnect, connected, wallet } = useTerraWallet();\n  const pk =\n    (wallet &&\n      wallet.wallets &&\n      wallet.wallets.length > 0 &&\n      wallet.wallets[0].terraAddress) ||\n    \"\";\n  return (\n    <ToggleConnectedButton\n      connect={connect}\n      disconnect={disconnect}\n      connected={connected}\n      pk={pk}\n    />\n  );\n};\n\nexport default TerraWalletKey;\n","import { ChainId, CHAIN_ID_TERRA, isEVMChain } from \"@certusone/wormhole-sdk\";\nimport { hexlify, hexStripZeros } from \"@ethersproject/bytes\";\nimport { useConnectedWallet } from \"@terra-money/wallet-provider\";\nimport { useCallback, useMemo } from \"react\";\nimport { useEthereumProvider } from \"../contexts/EthereumProviderContext\";\nimport { getEvmChainId } from \"../utils/consts\";\n\nconst createWalletStatus = (\n  isReady: boolean,\n  statusMessage: string = \"\",\n  forceNetworkSwitch: () => void,\n  walletAddress?: string\n) => ({\n  isReady,\n  statusMessage,\n  forceNetworkSwitch,\n  walletAddress,\n});\n\nfunction useIsWalletReady(\n  chainId: ChainId,\n  enableNetworkAutoswitch: boolean = true\n): {\n  isReady: boolean;\n  statusMessage: string;\n  walletAddress?: string;\n  forceNetworkSwitch: () => void;\n} {\n  const autoSwitch = enableNetworkAutoswitch;\n  const terraWallet = useConnectedWallet();\n  const hasTerraWallet = !!terraWallet;\n  const {\n    provider,\n    signerAddress,\n    chainId: evmChainId,\n  } = useEthereumProvider();\n  const hasEthInfo = !!provider && !!signerAddress;\n  const correctEvmNetwork = getEvmChainId(chainId);\n  const hasCorrectEvmNetwork = evmChainId === correctEvmNetwork;\n\n  const forceNetworkSwitch = useCallback(() => {\n    if (provider && correctEvmNetwork) {\n      if (!isEVMChain(chainId)) {\n        return;\n      }\n      try {\n        provider.send(\"wallet_switchEthereumChain\", [\n          { chainId: hexStripZeros(hexlify(correctEvmNetwork)) },\n        ]);\n      } catch (e) {}\n    }\n  }, [provider, correctEvmNetwork, chainId]);\n\n  return useMemo(() => {\n    if (\n      chainId === CHAIN_ID_TERRA &&\n      hasTerraWallet &&\n      terraWallet?.walletAddress\n    ) {\n      // TODO: terraWallet does not update on wallet changes\n      return createWalletStatus(\n        true,\n        undefined,\n        forceNetworkSwitch,\n        terraWallet.walletAddress\n      );\n    }\n    if (isEVMChain(chainId) && hasEthInfo && signerAddress) {\n      if (hasCorrectEvmNetwork) {\n        return createWalletStatus(\n          true,\n          undefined,\n          forceNetworkSwitch,\n          signerAddress\n        );\n      } else {\n        if (provider && correctEvmNetwork && autoSwitch) {\n          forceNetworkSwitch();\n        }\n        return createWalletStatus(\n          false,\n          `Wallet is not connected to testnet. Expected Chain ID: ${correctEvmNetwork}`,\n          forceNetworkSwitch,\n          undefined\n        );\n      }\n    }\n\n    return createWalletStatus(\n      false,\n      \"Wallet not connected\",\n      forceNetworkSwitch,\n      undefined\n    );\n  }, [\n    chainId,\n    autoSwitch,\n    forceNetworkSwitch,\n    hasTerraWallet,\n    hasEthInfo,\n    correctEvmNetwork,\n    hasCorrectEvmNetwork,\n    provider,\n    signerAddress,\n    terraWallet,\n  ]);\n}\n\nexport default useIsWalletReady;\n","import {\n  Collapse,\n  Container,\n  Link,\n  makeStyles,\n  Paper,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport {\n  ChainId,\n  CHAIN_ID_TERRA,\n  getSignedVAAWithRetry,\n  isEVMChain,\n} from \"@certusone/wormhole-sdk\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport ButtonWithLoader from \"../components/ButtonWithLoader\";\nimport EthereumSignerKey from \"../components/EthereumSignerKey\";\nimport TokenSelect from \"../components/TokenSelect\";\nimport { useEthereumProvider } from \"../contexts/EthereumProviderContext\";\nimport {\n  AVAX_TOKEN_INFO,\n  ETH_TOKEN_INFO,\n  getEvmChainId,\n  getSupportedSwaps,\n  RELAYER_FEE_USDC,\n  TokenInfo,\n  TOKEN_INFOS,\n  WORMHOLE_RPC_HOSTS,\n} from \"../utils/consts\";\nimport { COLORS } from \"../muiTheme\";\nimport { UniswapToUniswapExecutor } from \"../swapper/swapper\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport { hexlify, hexStripZeros } from \"ethers/lib/utils\";\nimport { useDebouncedCallback } from \"use-debounce\";\nimport { useSnackbar } from \"notistack\";\nimport { Alert } from \"@material-ui/lab\";\nimport parseError from \"../utils/parseError\";\nimport Settings from \"../components/Settings\";\nimport CircleLoader from \"../components/CircleLoader\";\nimport { ArrowForward, CheckCircleOutlineRounded } from \"@material-ui/icons\";\nimport SwapProgress from \"../components/SwapProgress\";\nimport Footer from \"../components/Footer\";\nimport TerraWalletKey from \"../components/TerraWalletKey\";\nimport useIsWalletReady from \"../hooks/useIsWalletReady\";\nimport { IWormhole__factory, IUSDCIntegration__factory } from \"../ethers-contracts\";\n\nconst useStyles = makeStyles((theme) => ({\n  bg: {\n    background:\n      \"linear-gradient(160deg, rgba(69,74,117,.1) 0%, rgba(138,146,178,.1) 33%, rgba(69,74,117,.1) 66%, rgba(98,104,143,.1) 100%), linear-gradient(45deg, rgba(153,69,255,.1) 0%, rgba(121,98,231,.1) 20%, rgba(0,209,140,.1) 100%)\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    minHeight: \"100vh\",\n  },\n  centeredContainer: {\n    textAlign: \"center\",\n    width: \"100%\",\n  },\n  mainPaper: {\n    padding: \"2rem\",\n    backgroundColor: COLORS.nearBlackWithMinorTransparency,\n  },\n  numberField: {\n    flexGrow: 1,\n    \"& > * > .MuiInputBase-input\": {\n      textAlign: \"center\",\n      height: \"100%\",\n      flexGrow: \"1\",\n      fontSize: \"3rem\",\n      fontFamily: \"Roboto Mono, monospace\",\n      caretShape: \"block\",\n      \"&::-webkit-outer-spin-button, &::-webkit-inner-spin-button\": {\n        \"-webkit-appearance\": \"none\",\n        \"-moz-appearance\": \"none\",\n        margin: 0,\n      },\n      \"&[type=number]\": {\n        \"-webkit-appearance\": \"textfield\",\n        \"-moz-appearance\": \"textfield\",\n      },\n    },\n    \"& > * > input::-webkit-inner-spin-button\": {\n      webkitAppearance: \"none\",\n      margin: \"0\",\n    },\n  },\n  gradientButton: {\n    backgroundImage: `linear-gradient(45deg, ${COLORS.blue} 0%, ${COLORS.nearBlack}20 50%,  ${COLORS.blue}30 62%, ${COLORS.nearBlack}50  120%)`,\n    transition: \"0.75s\",\n    backgroundSize: \"200% auto\",\n    boxShadow: \"0 0 20px #222\",\n    \"&:hover\": {\n      backgroundPosition:\n        \"right center\" /* change the direction of the change here */,\n    },\n    width: \"100%\",\n    height: \"3rem\",\n    marginTop: \"1rem\",\n  },\n  disabled: {\n    background: COLORS.gray,\n  },\n  spacer: {\n    height: \"1rem\",\n  },\n  titleBar: {\n    marginTop: \"10rem\",\n    \"& > *\": {\n      margin: \".5rem\",\n      alignSelf: \"flex-end\",\n    },\n  },\n  tokenSelectWrapper: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  wormholeIcon: {\n    height: 60,\n    filter: \"contrast(0)\",\n    transition: \"filter 0.5s\",\n    \"&:hover\": {\n      filter: \"contrast(1)\",\n    },\n    verticalAlign: \"middle\",\n    margin: \"1rem\",\n    display: \"inline-block\",\n  },\n  loaderHolder: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  successIcon: {\n    color: COLORS.green,\n    fontSize: \"200px\",\n  },\n  swapPath: {\n    display: \"inline-flex\",\n    alignItems: \"center\",\n  },\n}));\n\nconst switchEvmProviderNetwork = async (\n  provider: Web3Provider,\n  chainId: ChainId\n) => {\n  const evmChainId = getEvmChainId(chainId);\n  if (evmChainId === undefined) {\n    throw new Error(\"Unknown chainId\");\n  }\n  await provider.send(\"wallet_switchEthereumChain\", [\n    { chainId: hexStripZeros(hexlify(evmChainId)) },\n  ]);\n  const network = await provider.getNetwork();\n  if (network.chainId !== evmChainId) {\n    throw new Error(\"Could not switch network\");\n  }\n};\n\nconst ConnectedWalletAddress = ({\n  chainId,\n  prefix,\n}: {\n  chainId: ChainId;\n  prefix: string;\n}) => {\n  const { walletAddress } = useIsWalletReady(chainId, false);\n  if (walletAddress) {\n    const is0x = walletAddress.startsWith(\"0x\");\n    return (\n      <Typography variant=\"subtitle2\">\n        {prefix} {walletAddress?.substring(0, is0x ? 6 : 3)}...\n        {walletAddress?.substring(walletAddress.length - (is0x ? 4 : 3))}\n      </Typography>\n    );\n  }\n  return null;\n};\n\nconst SwapButton = ({\n  source,\n  target,\n  disabled,\n  showLoader,\n  onClick,\n}: {\n  source: TokenInfo;\n  target: TokenInfo;\n  disabled: boolean;\n  showLoader: boolean;\n  onClick: () => void;\n}) => {\n  const { isReady: isSourceWalletReady } = useIsWalletReady(\n    source.chainId,\n    !disabled\n  );\n  const { isReady: isTargetWalletReady } = useIsWalletReady(\n    target.chainId,\n    !isEVMChain(source.chainId)\n  );\n\n  if (!isSourceWalletReady) {\n    return isEVMChain(source.chainId) ? (\n      <EthereumSignerKey />\n    ) : source.chainId === CHAIN_ID_TERRA ? (\n      <TerraWalletKey />\n    ) : null;\n  }\n\n  if (\n    !isTargetWalletReady &&\n    (!isEVMChain(source.chainId) || !isEVMChain(target.chainId))\n  ) {\n    return isEVMChain(target.chainId) ? (\n      <EthereumSignerKey />\n    ) : source.chainId === CHAIN_ID_TERRA ? (\n      <TerraWalletKey />\n    ) : null;\n  }\n\n  return (\n    <ButtonWithLoader\n      disabled={disabled}\n      showLoader={showLoader}\n      onClick={onClick}\n    >\n      Swap\n    </ButtonWithLoader>\n  );\n};\n\nexport default function Home() {\n  const classes = useStyles();\n  const [sourceTokenInfo, setSourceTokenInfo] = useState(AVAX_TOKEN_INFO);\n  const [targetTokenInfo, setTargetTokenInfo] = useState(ETH_TOKEN_INFO);\n  const [amountIn, setAmountIn] = useState(\"\");\n  const [amountInUSDC, setAmountInUSDC] = useState(\"\");\n  const [amountOut, setAmountOut] = useState(\"\");\n  const [deadline, setDeadline] = useState(\"5\");\n  const [slippage, setSlippage] = useState(\"1\");\n  const [executor, setExecutor] = useState<UniswapToUniswapExecutor | null>(\n    null\n  );\n  const [isSwapping, setIsSwapping] = useState(false);\n  const [isComputingQuote, setIsComputingQuote] = useState(false);\n  const [hasQuote, setHasQuote] = useState(false);\n  const { provider, signer, signerAddress, disconnect } = useEthereumProvider();\n  const { enqueueSnackbar } = useSnackbar();\n  const [isSourceSwapComplete, setIsSourceSwapComplete] = useState(false);\n  const [isTargetSwapComplete, setIsTargetSwapComplete] = useState(false);\n  const [sourceTxBlockNumber, setSourceTxBlockNumber] = useState<\n    number | undefined\n  >(undefined);\n  const [hasSignedVAA, setHasSignedVAA] = useState(false);\n  const [relayerTimeoutString, setRelayerTimeoutString] = useState(\"\");\n\n  const computeQuote = useCallback(() => {\n    (async () => {\n      setHasQuote(false);\n      setIsComputingQuote(true);\n      setAmountOut(\"\");\n      setAmountInUSDC(\"\");\n      try {\n        if (\n          parseFloat(amountIn) > 0 &&\n          !isNaN(parseFloat(deadline)) &&\n          !isNaN(parseFloat(slippage))\n        ) {\n          const executor = new UniswapToUniswapExecutor();\n          await executor.initialize(\n            sourceTokenInfo.address,\n            targetTokenInfo.address,\n            true\n          );\n          await executor.computeAndVerifySrcPoolAddress().catch((e) => {\n            throw new Error(\"failed to verify source pool address\");\n          });\n          await executor.computeAndVerifyDstPoolAddress().catch((e) => {\n            throw new Error(\"failed to verify dest pool address\");\n          });\n          executor.setDeadlines((parseFloat(deadline) * 60).toString());\n          executor.setSlippage((parseFloat(slippage) / 100).toString());\n          executor.setRelayerFee(RELAYER_FEE_USDC);\n          const quote = await executor.computeQuoteExactIn(amountIn);\n          setExecutor(executor);\n          setAmountOut(parseFloat(quote.minAmountOut).toFixed(8));\n          setAmountInUSDC(parseFloat(quote.usdcAmountIn).toFixed(3));\n          setHasQuote(true);\n        }\n      } catch (e) {\n        console.error(e);\n        enqueueSnackbar(null, {\n          content: <Alert severity=\"error\">{parseError(e)}</Alert>,\n        });\n      }\n      setIsComputingQuote(false);\n    })();\n  }, [\n    sourceTokenInfo,\n    targetTokenInfo,\n    amountIn,\n    deadline,\n    slippage,\n    enqueueSnackbar,\n  ]);\n\n  const debouncedComputeQuote = useDebouncedCallback(computeQuote, 1000);\n\n  useEffect(() => {\n    debouncedComputeQuote();\n  }, [\n    sourceTokenInfo,\n    targetTokenInfo,\n    amountIn,\n    deadline,\n    slippage,\n    debouncedComputeQuote,\n  ]);\n\n  const handleAmountChange = useCallback((event) => {\n    setAmountIn(event.target.value);\n  }, []);\n\n  const handleSlippageChange = useCallback((slippage) => {\n    setSlippage(slippage);\n  }, []);\n\n  const handleDeadlineChange = useCallback((deadline) => {\n    setDeadline(deadline);\n  }, []);\n\n  const handleSourceChange = useCallback(\n    (event) => {\n      const tokenInfo = TOKEN_INFOS.find((x) => x.name === event.target.value);\n      if (tokenInfo) {\n        const supportedSwaps = getSupportedSwaps(tokenInfo);\n        if (supportedSwaps) {\n          setSourceTokenInfo(tokenInfo);\n          if (!supportedSwaps.find((x) => x.name === targetTokenInfo.name)) {\n            setTargetTokenInfo(supportedSwaps[0]);\n          }\n          setAmountIn(\"\");\n          setAmountOut(\"\");\n        }\n      }\n    },\n    [targetTokenInfo]\n  );\n\n  const handleTargetChange = useCallback((event) => {\n    const tokenInfo = TOKEN_INFOS.find((x) => x.name === event.target.value);\n    if (tokenInfo) {\n      setTargetTokenInfo(tokenInfo);\n      setAmountOut(\"\");\n    }\n  }, []);\n\n  const reset = useCallback(() => {\n    setIsSwapping(false);\n    setHasQuote(false);\n    setIsSourceSwapComplete(false);\n    setHasSignedVAA(false);\n    setIsTargetSwapComplete(false);\n    setAmountIn(\"\");\n    setAmountOut(\"\");\n    setSourceTxBlockNumber(undefined);\n    setRelayerTimeoutString(\"\");\n    disconnect();\n  }, [disconnect]);\n\n  const handleSwapClick = useCallback(async () => {\n    if (provider && signer && signerAddress && executor) {\n      try {\n        setIsSwapping(true);\n        setIsSourceSwapComplete(false);\n        setHasSignedVAA(false);\n        setIsTargetSwapComplete(false);\n        setRelayerTimeoutString(\"\");\n        await switchEvmProviderNetwork(provider, sourceTokenInfo.chainId);\n        console.log(signerAddress);\n\n        const sourceReceipt = await executor.evmApproveAndSwap(\n          signer,\n          signerAddress\n        );\n        console.info(\n          \"firstSwapTransactionHash:\",\n          sourceReceipt.transactionHash\n        );\n        setIsSourceSwapComplete(true);\n        setSourceTxBlockNumber(sourceReceipt.blockNumber);\n\n        console.log(\"fetching vaa\");\n        // Wait for the guardian network to reach consensus and emit the signedVAA\n        const { vaaBytes } = await getSignedVAAWithRetry(\n          WORMHOLE_RPC_HOSTS,\n          executor.srcExecutionParams.wormhole.chainId,\n          executor.vaaSearchParams.emitterAddress,\n          executor.vaaSearchParams.sequence\n        );\n        console.log(\"vaa retrieved\");\n        setHasSignedVAA(true);\n\n        const parsed = await IWormhole__factory.connect(\n            executor.srcExecutionParams.wormhole.coreBridgeAddress,\n            provider\n        ).parseVM(vaaBytes);\n\n        const circleEmitter = IUSDCIntegration__factory.connect(\n            executor.dstExecutionParams.wormhole.circleEmitterAddress,\n            executor.quoter.getDstEvmProvider()!,\n        )\n        //  Check if the signedVAA has redeemed by the relayer\n        let isCompleted = false;\n        \n        // retry for two minutes\n        let retries = 0;\n        while (!isCompleted && retries <= 20) {\n          isCompleted = await circleEmitter.isMessageConsumed(parsed.hash);\n          ++retries;\n\n          // sleep for 3 seconds\n          await new Promise((resolve) => setTimeout(resolve, 3000));\n        };\n\n        if (!isCompleted) {\n          // If the relayer hasn't redeemed the signedVAA, then manually redeem it ourselves\n          setRelayerTimeoutString(\n            \"Timed out waiting for relayer to complete swap. You'll need to complete it yourself.\"\n          );\n          await switchEvmProviderNetwork(provider, targetTokenInfo.chainId);\n          const targetReceipt = await executor.fetchVaaAndSwap(signer);\n          console.info(\n            \"secondSwapTransactionHash:\",\n            targetReceipt.transactionHash\n          );\n        }\n        setIsTargetSwapComplete(true);\n      } catch (e: any) {\n        reset();\n        console.error(e);\n        enqueueSnackbar(null, {\n          content: <Alert severity=\"error\">{parseError(e)}</Alert>,\n        });\n      }\n    }\n  }, [\n    provider,\n    signer,\n    signerAddress,\n    executor,\n    enqueueSnackbar,\n    sourceTokenInfo,\n    targetTokenInfo,\n    reset,\n  ]);\n\n  const readyToSwap = provider && signer && hasQuote;\n  const disableSelect = isSwapping || isComputingQuote;\n\n  return (\n    <div className={classes.bg}>\n      <Container className={classes.centeredContainer} maxWidth=\"sm\">\n        <div className={classes.titleBar}></div>\n        <Typography variant=\"h4\">Wormhole NativeSwap Demo</Typography>\n        <div className={classes.spacer} />\n        <Paper className={classes.mainPaper}>\n          <Collapse in={!isSourceSwapComplete}>\n            <Settings\n              disabled={disableSelect}\n              slippage={slippage}\n              deadline={deadline}\n              onSlippageChange={handleSlippageChange}\n              onDeadlineChange={handleDeadlineChange}\n            />\n            <TokenSelect\n              tokens={TOKEN_INFOS}\n              value={sourceTokenInfo.name}\n              onChange={handleSourceChange}\n              disabled={disableSelect}\n            ></TokenSelect>\n            <Typography variant=\"subtitle1\">Send</Typography>\n            <TextField\n              type=\"number\"\n              value={amountIn}\n              disabled={disableSelect}\n              InputProps={{ disableUnderline: true }}\n              className={classes.numberField}\n              onChange={handleAmountChange}\n              placeholder=\"0.0\"\n            ></TextField>\n            {parseFloat(amountIn) > sourceTokenInfo.maxAmount ? (\n              <Typography\n                variant=\"subtitle2\"\n                color=\"error\"\n              >{`The max input amount is ${sourceTokenInfo.maxAmount} ${sourceTokenInfo.name}`}</Typography>\n            ) : null}\n            <ConnectedWalletAddress\n              chainId={sourceTokenInfo.chainId}\n              prefix=\"From:\"\n            />\n            <div className={classes.spacer} />\n            <TokenSelect\n              tokens={getSupportedSwaps(sourceTokenInfo)}\n              value={targetTokenInfo.name}\n              onChange={handleTargetChange}\n              disabled={disableSelect}\n            ></TokenSelect>\n            <Typography variant=\"subtitle1\">Receive (estimated)</Typography>\n            <TextField\n              type=\"number\"\n              value={amountOut}\n              autoFocus={true}\n              InputProps={{ disableUnderline: true }}\n              className={classes.numberField}\n              inputProps={{ readOnly: true }}\n              placeholder=\"0.0\"\n            ></TextField>\n            <ConnectedWalletAddress\n              chainId={\n                isEVMChain(sourceTokenInfo.chainId) &&\n                isEVMChain(targetTokenInfo.chainId)\n                  ? sourceTokenInfo.chainId\n                  : targetTokenInfo.chainId\n              }\n              prefix=\"To:\"\n            />\n            <div className={classes.spacer} />\n            <Typography variant=\"subtitle2\">{`Slippage tolerance: ${slippage}%`}</Typography>\n            <Typography variant=\"subtitle2\">{`Relayer fee: ${RELAYER_FEE_USDC} USDC`}</Typography>\n            <SwapButton\n              source={sourceTokenInfo}\n              target={targetTokenInfo}\n              disabled={\n                !readyToSwap ||\n                isSwapping ||\n                parseFloat(amountIn) > sourceTokenInfo.maxAmount\n              }\n              showLoader={isSwapping}\n              onClick={handleSwapClick}\n            />\n          </Collapse>\n          <Collapse in={isSourceSwapComplete && !isTargetSwapComplete}>\n            <div className={classes.loaderHolder}>\n              <CircleLoader />\n              <div className={classes.spacer} />\n              <Typography variant=\"h5\">\n                {`Your ${sourceTokenInfo.name} is being swapped to ${targetTokenInfo.name}`}\n              </Typography>\n            </div>\n          </Collapse>\n          <Collapse in={isTargetSwapComplete}>\n            <div className={classes.loaderHolder}>\n              <CheckCircleOutlineRounded\n                className={classes.successIcon}\n                fontSize={\"inherit\"}\n              />\n              <Typography>Swap completed!</Typography>\n              <ButtonWithLoader onClick={reset}>\n                Swap more tokens!\n              </ButtonWithLoader>\n            </div>\n          </Collapse>\n          <div className={classes.spacer} />\n          {hasQuote && (\n            <Typography variant=\"subtitle1\" className={classes.swapPath}>\n              {`${amountIn} ${sourceTokenInfo.name}`}\n              <ArrowForward fontSize=\"inherit\" style={{ margin: \"10px\" }} />\n              {`${amountInUSDC} USDC `}\n              <ArrowForward fontSize=\"inherit\" style={{ margin: \"10px\" }} />\n              {`${amountOut} ${targetTokenInfo.name}`}\n            </Typography>\n          )}\n          {isSourceSwapComplete &&\n            !isTargetSwapComplete &&\n            !relayerTimeoutString && (\n              <>\n                <SwapProgress\n                  chainId={sourceTokenInfo.chainId}\n                  txBlockNumber={sourceTxBlockNumber}\n                  hasSignedVAA={hasSignedVAA}\n                  isTargetSwapComplete={isTargetSwapComplete}\n                />\n                <div className={classes.spacer} />\n              </>\n            )}\n          {relayerTimeoutString && (\n            <Typography variant=\"subtitle1\">{relayerTimeoutString}</Typography>\n          )}\n          <Typography variant=\"subtitle2\" color=\"error\">\n            WARNING: this is a testnet release only, prices may not reflect\n            reality\n          </Typography>\n        </Paper>\n        <div className={classes.spacer} />\n        <Footer />\n        <Link\n          href=\"https://goerli-faucet.slock.it/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          style={{ margin: \"5px\" }}\n        >\n          Goerli Faucet\n        </Link>\n        <Link\n          href=\"https://faucet.polygon.technology/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          style={{ margin: \"5px\" }}\n        >\n          Mumbai Faucet\n        </Link>\n        <Link\n          href=\"https://faucet.avax-test.network/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          style={{ margin: \"5px\" }}\n        >\n          Fuji Faucet\n        </Link>\n        <Link\n          href=\"https://testnet.binance.org/faucet-smart/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          style={{ margin: \"5px\" }}\n        >\n          BSC Faucet\n        </Link>\n        <Link\n          href=\"https://github.com/certusone/nativeswap-usdc-example/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          style={{ margin: \"5px\" }}\n        >\n          NativeSwap GitHub\n        </Link>\n      </Container>\n    </div>\n  );\n}\n","import Home from \"./views/Home\";\n\nexport default function App() {\n  return <Home />;\n}\n","import { Typography } from \"@material-ui/core\";\nimport React from \"react\";\n\nexport default class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error(error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <Typography variant=\"h5\" style={{ textAlign: \"center\", marginTop: 24 }}>\n          \"An unexpected error has occurred. Please refresh the page.\"\n        </Typography>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n","import { CssBaseline } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { SnackbarProvider } from \"notistack\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport ErrorBoundary from \"./components/ErrorBoundary\";\nimport { EthereumProviderProvider } from \"./contexts/EthereumProviderContext\";\nimport { TerraWalletProvider } from \"./contexts/TerraWalletContext\";\nimport { theme } from \"./muiTheme\";\n\nReactDOM.render(\n  <ErrorBoundary>\n    <ThemeProvider theme={theme}>\n      <CssBaseline>\n        <EthereumProviderProvider>\n          <TerraWalletProvider>\n            <SnackbarProvider maxSnack={3}>\n              <App />\n            </SnackbarProvider>\n          </TerraWalletProvider>\n        </EthereumProviderProvider>\n      </CssBaseline>\n    </ThemeProvider>\n  </ErrorBoundary>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}